Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\build.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\examples\log.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\examples\ls-tree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\commitgraph\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\commitgraph\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\corpus\db.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\corpus\engine.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\corpus\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\corpus\run.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\corpus\trace.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\discover.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\hours\core.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\hours\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\hours\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\index\checkout.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\index\information.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\index\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\mailmap.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\net.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\organize.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\pack\create.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\pack\explode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\pack\index.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\pack\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\pack\multi_index.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\pack\receive.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\pack\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\query\db.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\query\engine\command.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\query\engine\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\query\engine\update.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\query\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\archive.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\attributes\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\attributes\query.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\attributes\validate_baseline.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\clean.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\clone.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\commitgraph\list.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\commitgraph\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\commitgraph\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\config.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\credential.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\dirty.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\exclude.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\fetch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\fsck.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\index\entries.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\index\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\mailmap.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\odb.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\revision\explain.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\revision\list.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\revision\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\revision\previous_branches.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\revision\resolve.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\status.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\submodule.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\tree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gitoxide-core\src\repository\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\examples\clone.rs
Checking unsafe block with 1 statements, large unsafe: false, function: main, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\examples\clone.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\examples\init-repo-and-commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\examples\interrupt-handler-allows-graceful-shutdown.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\examples\reversible-interrupt-handlers.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\examples\stats.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\attribute_stack.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\clone\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\clone\checkout.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\clone\fetch\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\clone\fetch\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\clone\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\cache\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\cache\incubate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\cache\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\cache\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\cache\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\overrides.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\snapshot\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\snapshot\credential_helpers.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\snapshot\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\snapshot\_impls.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\keys.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\author.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\branch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\checkout.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\clone.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\committer.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\core.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\credential.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\diff.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\extensions.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\fetch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\gitoxide.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\http.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\index.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\mailmap.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\pack.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\protocol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\push.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\safe.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\ssh.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\status.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\url.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\sections\user.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\config\tree\traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\create.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\diff.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\dirwalk\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\dirwalk\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\dirwalk\options.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\discover.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\env.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\ext\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\ext\object_id.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\ext\reference.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\ext\rev_spec.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\ext\tree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\filter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\head\log.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\head\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\head\peel.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\id.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\interrupt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: deregister, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\interrupt.rs
Checking unsafe block with 2 statements, large unsafe: false, function: init_handler, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\interrupt.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\mailmap.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\blob.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\errors.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\impls.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\peel.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\tag.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\tree\diff\change.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\tree\diff\for_each.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\tree\diff\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\tree\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\object\tree\traverse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\open\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\open\options.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\open\permissions.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\open\repository.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\path.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\pathspec.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\prelude.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\progress.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\push.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\reference\edits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\reference\errors.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\reference\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\reference\log.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\reference\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\reference\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\build.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connect.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\fetch\config.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\fetch\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\fetch\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\fetch\negotiate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\fetch\receive_pack.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\fetch\update_refs\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\fetch\update_refs\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\fetch\update_refs\update.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\connection\ref_map.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\errors.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\fetch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\name.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\save.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\url\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\url\rewrite.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\remote\url\scheme_permission.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\attributes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\cache.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\config\branch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\config\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\config\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\config\transport.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\diff.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\dirwalk.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\filter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\graph.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\identity.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\impls.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\index.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\kind.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\location.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\mailmap.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\object.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\pathspec.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\permissions.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\reference.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\revision.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\shallow.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\state.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\submodule.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\thread_safe.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\repository\worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\spec\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\spec\parse\delegate\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\spec\parse\delegate\navigate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\spec\parse\delegate\revision.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\spec\parse\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\spec\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\spec\parse\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\revision\walk.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\shallow.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\state.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\status\index_worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\status\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\status\platform.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\submodule\errors.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\submodule\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\tag.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\worktree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\src\worktree\proxy.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\clone\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\commit\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\config\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\config\tree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\diff\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\gix-init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\gix.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\head\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\id\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\init\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\interrupt.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\object\blob.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\object\commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\object\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\object\tree\diff.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\object\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\reference\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\reference\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\remote\connect.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\remote\fetch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\remote\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\remote\ref_map.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\remote\save.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\config\config_snapshot\credential_helpers.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\config\config_snapshot\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\config\identity.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\config\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\config\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\config\transport_options.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\excludes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\filter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\object.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\open.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\pathspec.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\reference.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\shallow.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\state.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\submodule.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\repository\worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\spec\from_bytes\ambiguous.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\spec\from_bytes\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\spec\from_bytes\peel.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\spec\from_bytes\reflog.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\spec\from_bytes\regex.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\spec\from_bytes\traverse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\spec\from_bytes\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\revision\spec\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\status\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\submodule\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix\tests\util\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-actor\src\identity.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-actor\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-actor\src\signature\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-actor\src\signature\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-actor\tests\actor.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-actor\tests\identity\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-actor\tests\signature\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-archive\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-archive\src\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-archive\tests\archive.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\fuzz\fuzz_targets\fuzz_search.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\assignment.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\name.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\search\attributes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\search\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\search\outcome.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\search\refmap.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\source.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\state.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_bytes, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\src\state.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\tests\assignment\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\tests\attributes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\tests\search\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-attributes\tests\state\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-bitmap\src\ewah.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-bitmap\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-blame\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-blame\tests\blame.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-chunk\src\file\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-chunk\src\file\index.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-chunk\src\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-chunk\src\file\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-chunk\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-command\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-command\tests\command.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\fuzz\fuzz_targets\fuzz_file.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\file\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\file\commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\file\init.rs
Checking unsafe block with 1 statements, large unsafe: false, function: try_from, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\file\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\file\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\src\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\tests\access\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-commitgraph\tests\commitgraph.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\benches\large_config_file.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\fuzz\fuzz_targets\fuzz_file.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\fuzz\fuzz_targets\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\access\comfort.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\access\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\access\mutate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\access\raw.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\access\read_only.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\impls.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\includes\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\includes\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\init\comfort.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\init\from_env.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\init\from_paths.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\init\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\init\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\meta.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\mutable\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\mutable\multi_value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\mutable\section.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\mutable\value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\section\body.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\section\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\file\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\key.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\lookup.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\comment.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\event.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\events.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\nom\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\nom\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\section\header.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\section\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\section\unvalidated.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\parse\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\source.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\value\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\src\value\normalize.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\config.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\access\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\access\mutate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\access\raw\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\access\raw\raw_multi_value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\access\raw\raw_value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\access\raw\set_existing_raw_value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\access\raw\set_raw_value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\access\read_only.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\impls\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\comfort.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\from_env.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\from_paths\includes\conditional\gitdir\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\from_paths\includes\conditional\gitdir\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\from_paths\includes\conditional\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\from_paths\includes\conditional\onbranch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\from_paths\includes\unconditional.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\from_paths\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\from_str.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\init\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\mutable\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\mutable\multi_value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\mutable\section.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\mutable\value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\resolve_includes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\file\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\key\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\mem.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\parse\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\parse\from_bytes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\parse\section.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\source\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\value\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config\tests\value\normalize.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\fuzz\fuzz_targets\fuzz_value.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\src\boolean.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\src\color.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\src\integer.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\src\path.rs
Checking unsafe block with 1 statements, large unsafe: false, function: home_for_user, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\src\path.rs
Checking unsafe block with 1 statements, large unsafe: false, function: home_for_user, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\src\path.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\src\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\tests\value\boolean.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\tests\value\color.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\tests\value\integer.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\tests\value\main.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-config-value\tests\value\path.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\examples\custom-helper.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\examples\git-credential-lite.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\examples\invoke-git-credential.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\helper\cascade.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\helper\invoke.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\helper\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\program\main.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\program\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\protocol\context\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\protocol\context\serde.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\src\protocol\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\credentials.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\helper\cascade.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\helper\context.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\helper\invoke.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\helper\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\program\from_custom_definition.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\program\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\protocol\context.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-credentials\tests\protocol\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\fuzz\fuzz_targets\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\src\time\format.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\src\time\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\src\time\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\src\time\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\tests\date.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\tests\time\baseline.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\tests\time\format.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\tests\time\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-date\tests\time\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\blob\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\blob\pipeline.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\blob\platform.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\rewrites\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\rewrites\tracker.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\tree\changes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\tree\recorder.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\src\tree\visit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\tests\blob\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\tests\blob\pipeline.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\tests\blob\platform.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\tests\diff.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\tests\rewrites\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\tests\rewrites\tracker.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-diff\tests\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\src\entry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\src\walk\classify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\src\walk\function.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\src\walk\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\src\walk\readdir.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\tests\dir.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\tests\dir_walk_cwd.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\tests\walk\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-dir\tests\walk_utils\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\src\is.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\src\path.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\src\repository.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\src\upwards\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\src\upwards\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\src\upwards\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\tests\discover.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\tests\isolated.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\tests\is_git\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\tests\path\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\tests\upwards\ceiling_dirs.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-discover\tests\upwards\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\cache.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\fs.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\hash.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\interrupt.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\parallel\eager_iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\parallel\in_order.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\parallel\in_parallel.rs
Checking unsafe block with 1 statements, large unsafe: false, function: in_parallel_with_slice, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\parallel\in_parallel.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\parallel\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\parallel\reduce.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\parallel\serial.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\progress.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\threading.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\zlib\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\zlib\stream\deflate\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\zlib\stream\deflate\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\zlib\stream\inflate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\src\zlib\stream\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\features.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\hash.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\parallel\in_order_iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\parallel\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\parallel_shared.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\parallel_shared_threaded.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\parallel_threaded.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\pipe.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-features\tests\trace\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fetchhead\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\examples\arrow.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\driver\apply.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\driver\delayed.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\driver\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\driver\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\driver\process\client.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\driver\process\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\driver\process\server.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\driver\shutdown.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\eol\convert_to_git.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\eol\convert_to_worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\eol\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\eol\utils.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\ident.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\pipeline\convert.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\pipeline\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\pipeline\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\worktree\encode_to_git.rs
Checking unsafe block with 1 statements, large unsafe: false, function: encode_to_git, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\worktree\encode_to_git.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\worktree\encode_to_worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\worktree\encoding.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\src\worktree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\driver\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\eol\convert_to_git.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\eol\convert_to_worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\eol\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\filter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\ident\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\pipeline\convert_to_git.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\pipeline\convert_to_worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\pipeline\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-filter\tests\worktree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\capabilities.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\dir\create.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\dir\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\dir\remove.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\read_dir.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\snapshot.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\stack.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\src\symlink.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\tests\capabilities\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\tests\current_dir.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\tests\dir\create.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\tests\dir\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\tests\dir\remove.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\tests\fs.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\tests\read_dir\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fs\tests\stack\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fsck\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fsck\tests\connectivity\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-fsck\tests\fsck.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\src\pattern.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\src\search\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\src\search\pattern.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\src\wildmatch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\tests\glob.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\tests\pattern\matching.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\tests\pattern\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\tests\search\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\tests\search\pattern.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-glob\tests\wildmatch\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\src\kind.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\src\object_id.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\src\oid.rs
Checking unsafe block with 1 statements, large unsafe: false, function: try_from_bytes, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\src\oid.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_bytes, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\src\oid.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\src\prefix.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\tests\hash.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\tests\kind\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\tests\object_id\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\tests\oid\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hash\tests\prefix\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hashtable\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-hashtable\tests\hashtable.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ignore\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ignore\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ignore\src\search.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ignore\tests\ignore.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ignore\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ignore\tests\search\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\access\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\access\sparse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\decode\entries.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\decode\header.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\decode\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\entry\flags.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\entry\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\entry\mode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\entry\stat.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\entry\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\end_of_index_entry\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\end_of_index_entry\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\end_of_index_entry\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\fs_monitor.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\index_entry_offset_table.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\link.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\resolve_undo.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\sparse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\tree\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\tree\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\tree\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\extension\untracked_cache.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\file\init.rs
Checking unsafe block with 1 statements, large unsafe: false, function: at, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\file\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\file\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\file\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\fs.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\src\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\entry\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\entry\mode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\entry\stat.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\entry\time.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\file\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\file\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\file\read.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\file\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\fs.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\index\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-index\tests\integrate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lfs\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lock\src\acquire.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lock\src\commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lock\src\file.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lock\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lock\tests\all.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lock\tests\lock\file.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lock\tests\lock\marker.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-lock\tests\lock\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-macros\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-macros\src\momo.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-macros\tests\macros.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-macros\tests\momo\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-macros\tests\momo\ux\error_if_ineffective.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-macros\tests\momo\ux\error_on_struct.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\src\entry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\src\snapshot\entry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\src\snapshot\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\src\snapshot\signature.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\src\snapshot\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\tests\mailmap.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-mailmap\tests\snapshot\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-negotiate\src\consecutive.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-negotiate\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-negotiate\src\noop.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-negotiate\src\skipping.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-negotiate\tests\baseline\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-negotiate\tests\negotiate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-note\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\benches\decode_objects.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\fuzz\fuzz_targets\fuzz_commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\fuzz\fuzz_targets\fuzz_tag.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\fuzz\fuzz_targets\fuzz_tree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\blob.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\commit\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\commit\message\body.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\commit\message\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\commit\message\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\commit\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\commit\ref_iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\commit\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\data.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\encode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\kind.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\object\convert.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\object\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\tag\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\tag\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\tag\ref_iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\tag\write\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\tag\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\tree\ref_iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\src\tree\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\commit\from_bytes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\commit\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\commit\message.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\commit\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\encode\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\object.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\object_ref\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\tag\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-object\tests\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\alternate\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\alternate\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\cache.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\sink.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\handle.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\header.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\load_index.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\load_one.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\metrics.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\prefix.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\structure.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\dynamic\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\loose\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\loose\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\loose\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\loose\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\loose\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\store_impls\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\src\traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\integrate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\alternate\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\find\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\header\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\regression\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\sink\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\store\compound.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\store\dynamic.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\store\linked.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\store\loose.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-odb\tests\odb\store\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\bundle\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\bundle\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\bundle\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\bundle\write\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\bundle\write\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\bundle\write\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\from_offsets.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\traverse\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: traverse, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\traverse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\traverse\resolve.rs
Checking unsafe block with 1 statements, large unsafe: false, function: into_child_iter, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\traverse\resolve.rs
Checking unsafe block with 1 statements, large unsafe: false, function: into_child_iter, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\traverse\resolve.rs
Checking unsafe block with 1 statements, large unsafe: false, function: deltas, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\traverse\resolve.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\traverse\util.rs
Checking unsafe block with 1 statements, large unsafe: false, function: get_mut, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\traverse\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\delta\tree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\lru.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\cache\object.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\delta.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\entry\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\entry\header.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\entry\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\file\decode\entry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\file\decode\header.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\file\decode\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\file\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\file\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\header.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\input\bytes_to_entries.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\input\entries_to_bytes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\input\entry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\input\lookup_ref_delta_objects.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\input\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\input\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\bytes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\count\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\count\objects\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\count\objects\reduce.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\count\objects\tree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\count\objects\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\count\objects\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\entry\iter_from_counts.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\entry\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\data\output\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\find_traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\encode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\traverse\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\traverse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\traverse\reduce.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\traverse\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\traverse\with_index.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\traverse\with_lookup.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\write\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\index\write\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: read_only, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\multi_index\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\multi_index\chunk.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\multi_index\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\multi_index\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\multi_index\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\multi_index\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\src\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\integrate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\bundle.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\data\file.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\data\header.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\data\input.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\data\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\data\output\count_and_entries.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\data\output\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\index.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\multi_index\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\multi_index\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\multi_index\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pack\tests\pack\multi_index\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\encode\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\encode\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\encode\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\line\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\line\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\line\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\read\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\read\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\read\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\read\sidebands\async_io.rs
Checking unsafe block with 1 statements, large unsafe: false, function: poll_fill_buf, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\read\sidebands\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\read\sidebands\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\read\sidebands\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\write\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\write\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\src\write\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\tests\async-packetline.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\tests\blocking-packetline.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\tests\decode\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\tests\encode\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\tests\read\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\tests\read\sideband.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline\tests\write\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\encode\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\encode\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\encode\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\line\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\line\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\line\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\read\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\read\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\read\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\read\sidebands\async_io.rs
Checking unsafe block with 1 statements, large unsafe: false, function: poll_fill_buf, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\read\sidebands\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\read\sidebands\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\read\sidebands\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\write\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\write\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-packetline-blocking\src\write\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\src\convert.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\src\env\git\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\src\env\git\tests.rs
Checking unsafe block with 1 statements, large unsafe: false, function: current, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\src\env\git\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\src\env\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\src\realpath.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\src\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\tests\convert\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\tests\convert\normalize.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\tests\path.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\tests\realpath\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-path\tests\util\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\fuzz\fuzz_targets\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\src\defaults.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\src\pattern.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\src\search\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\src\search\matching.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\src\search\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\tests\defaults.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\tests\normalize\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\tests\parse\invalid.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\tests\parse\valid.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\tests\pathspec.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-pathspec\tests\search\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-prompt\examples\askpass.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-prompt\examples\credentials.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-prompt\examples\use-askpass.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-prompt\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-prompt\src\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-prompt\src\unix.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-prompt\tests\options\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-prompt\tests\prompt.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\command\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\command\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\arguments\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\arguments\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\arguments\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\delegate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\handshake.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\response\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\response\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\response\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\fetch_fn.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\handshake\function.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\handshake\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\handshake\refs\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\handshake\refs\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\handshake\refs\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\handshake\refs\shared.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\handshake\refs\tests.rs
Checking unsafe block with 1 statements, large unsafe: false, function: project_inner, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\handshake\refs\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\ls_refs.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\remote_progress.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\src\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\tests\async-protocol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\tests\blocking-protocol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\tests\fetch\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\tests\fetch\response.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\tests\fetch\v1.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\tests\fetch\v2.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-protocol\tests\remote_progress\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-quote\src\ansi_c.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-quote\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-quote\src\single.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-quote\tests\quote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-rebase\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\fuzz\fuzz_targets\fuzz_log.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\fuzz\fuzz_targets\fuzz_names.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\fuzz\fuzz_targets\fuzz_packed_buffer.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\fullname.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\log.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\name.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new_unchecked, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\name.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\namespace.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\peel.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\raw.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\log\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\log\line.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\log\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\loose\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\loose\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\loose\reference\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\loose\reference\logiter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\loose\reference\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\loose\reflog\create_or_update\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\loose\reflog.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\overlay_iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\packed.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\raw_ext.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\transaction\commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\transaction\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\file\transaction\prepare.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\general\handle\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\general\handle\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\general\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\general\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\packed\buffer.rs
Checking unsafe block with 1 statements, large unsafe: false, function: open, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\packed\buffer.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\packed\decode\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\packed\decode.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\packed\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\packed\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\packed\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\store\packed\transaction.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\target.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\transaction\ext.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\src\transaction\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\log.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\reference.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\store\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\store\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\store\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\store\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\store\reflog.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\transaction\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\transaction\prepare_and_commit\create_or_update\collisions.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\transaction\prepare_and_commit\create_or_update\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\transaction\prepare_and_commit\delete.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\file\worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\fullname\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\namespace\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\packed\find.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\packed\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\packed\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\packed\open.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\reference\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\refs.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\store\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-ref\tests\transaction\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\fuzz\fuzz_targets\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\instruction.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\match_group\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\match_group\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\match_group\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\match_group\validate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\spec.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\src\write.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\impls\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\matching\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\match_group\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\parse\fetch.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\parse\invalid.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\parse\push.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\refspec.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\spec\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-refspec\tests\write\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\fuzz\fuzz_targets\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\src\describe.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\src\spec\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\src\spec\parse\delegate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\src\spec\parse\function.rs
Checking unsafe block with 1 statements, large unsafe: false, function: long_describe_prefix, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\src\spec\parse\function.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\src\spec\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\describe\format.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\describe\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\revision.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\display.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\anchor\at_symbol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\anchor\colon_symbol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\anchor\describe.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\anchor\hash.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\anchor\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\anchor\refnames.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\kind.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\navigate\caret_symbol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\navigate\colon_symbol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\navigate\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revision\tests\spec\parse\navigate\tilde_symbol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revwalk\src\graph\commit.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revwalk\src\graph\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revwalk\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revwalk\src\queue.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-revwalk\tests\revwalk.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-sec\src\identity.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-sec\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-sec\src\permission.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-sec\src\trust.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-sec\tests\identity\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-sec\tests\sec.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-sequencer\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\index_as_worktree\function.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\index_as_worktree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\index_as_worktree\recorder.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\index_as_worktree\traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\index_as_worktree\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\index_as_worktree_with_renames\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\index_as_worktree_with_renames\recorder.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\index_as_worktree_with_renames\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\src\stack.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\tests\stack\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\tests\status\index_as_worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\tests\status\index_as_worktree_with_renames.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\tests\status\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-status\tests\worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-submodule\src\access.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-submodule\src\config.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-submodule\src\is_active_platform.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-submodule\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-submodule\tests\file\baseline.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-submodule\tests\file\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-submodule\tests\submodule.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\examples\delete-tempfiles-on-sigterm-interactive.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\examples\delete-tempfiles-on-sigterm.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\examples\try-deadlock-on-cleanup.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\src\forksafe.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\src\handle.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\src\registry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\src\signal.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\tests\all.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\tests\registry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\tests\tempfile\handle.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tempfile\tests\tempfile\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tix\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-trace\src\disabled.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-trace\src\enabled.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-trace\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-trace\tests\trace.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\async_io\bufread_ext.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\async_io\connect.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\async_io\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\async_io\request.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\async_io\traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\bufread_ext.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\connect.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\file.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\http\curl\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\http\curl\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\http\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\http\redirect.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\http\reqwest\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\http\reqwest\remote.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\http\traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\request.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\ssh\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\ssh\program_kind.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\ssh\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\blocking_io\traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\capabilities.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\git\async_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\git\blocking_io.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\git\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\non_io_types.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\client\traits.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\async-transport.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\blocking-transport-http.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\blocking-transport.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\client\blocking_io\http\mock.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\client\blocking_io\http\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\client\blocking_io\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\client\capabilities.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\client\git.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-transport\tests\client\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\commit\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\commit\simple.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\commit\topo\init.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\commit\topo\iter.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\commit\topo\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\tree\breadthfirst.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\src\tree\recorder.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\tests\commit\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\tests\commit\simple.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\tests\commit\topo.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\tests\traverse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-traverse\tests\tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-tui\src\main.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\fuzz\fuzz_targets\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\src\expand_path.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\src\impls.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\src\parse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\src\scheme.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\access\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\baseline.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\expand_path\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\fuzzed.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\parse\file.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\parse\http.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\parse\invalid.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\parse\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\parse\ssh.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-url\tests\url.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\src\backoff.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\src\btoi.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\src\buffers.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\src\str.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\tests\backoff\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\tests\btoi\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\tests\buffers\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\tests\str\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-utils\tests\utils.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\src\path.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\src\reference.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\src\submodule.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\src\tag.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\tests\path\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\tests\reference\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\tests\submodule\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\tests\tag\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-validate\tests\validate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\src\stack\delegate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\src\stack\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\src\stack\platform.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\src\stack\state\attributes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\src\stack\state\ignore.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\src\stack\state\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\tests\integrate.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\tests\worktree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\tests\worktree\stack\attributes.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\tests\worktree\stack\create_directory.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\tests\worktree\stack\ignore.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree\tests\worktree\stack\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-state\src\checkout\chunk.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-state\src\checkout\entry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-state\src\checkout\function.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-state\src\checkout\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-state\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-state\tests\state\checkout.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-state\tests\state\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-state\tests\worktree.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-stream\src\entry.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-stream\src\from_tree\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-stream\src\from_tree\traverse.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-stream\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-stream\src\protocol.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\gix-worktree-stream\tests\stream.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\ein.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\gix.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\plumbing\main.rs
Checking unsafe block with 1 statements, large unsafe: false, function: main, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\plumbing\main.rs
Checking unsafe block with 1 statements, large unsafe: false, function: main, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\plumbing\main.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\plumbing\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\plumbing\options\free.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\plumbing\options\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\plumbing\progress.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\porcelain\main.rs
Checking unsafe block with 1 statements, large unsafe: false, function: main, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\porcelain\main.rs
Checking unsafe block with 1 statements, large unsafe: false, function: main, file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\porcelain\main.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\porcelain\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\porcelain\options.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\shared.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\src\uni.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\tests\tools\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\gitoxide-a807dd1ffb05efd177700d065095249e6c4b3c68\tests\tools\src\main.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\build.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\examples\mk_certs.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Checking unsafe block with 4 statements, large unsafe: true, function: new_encrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Start Line: 96, End Line: 112
/// Prepares a key for encryption.
///
/// # Failure
///
/// Returns an error if the key is not 128, 192, or 256 bits.
#[corresponds(AES_set_encrypt_key)]
pub fn new_encrypt(key: &[u8]) -> Result<AesKey, KeyError> {
    unsafe {
        assert!(key.len() <= c_int::MAX as usize / 8);
        let mut aes_key = MaybeUninit::uninit();
        let r = ffi::AES_set_encrypt_key(
            key.as_ptr() as *const _,
            key.len() as AesBitType * 8,
            aes_key.as_mut_ptr(),
        );
        if r == 0 { Ok(AesKey(aes_key.assume_init())) } else { Err(KeyError(())) }
    }
}



Checking unsafe block with 4 statements, large unsafe: true, function: new_decrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Start Line: 120, End Line: 137
/// Prepares a key for decryption.
///
/// # Failure
///
/// Returns an error if the key is not 128, 192, or 256 bits.
#[corresponds(AES_set_decrypt_key)]
pub fn new_decrypt(key: &[u8]) -> Result<AesKey, KeyError> {
    unsafe {
        assert!(key.len() <= c_int::MAX as usize / 8);
        let mut aes_key = MaybeUninit::uninit();
        let r = ffi::AES_set_decrypt_key(
            key.as_ptr() as *const _,
            key.len() as AesBitType * 8,
            aes_key.as_mut_ptr(),
        );
        if r == 0 { Ok(AesKey(aes_key.assume_init())) } else { Err(KeyError(())) }
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: aes_ige, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Found function with unsafe block in aes_ige:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Start Line: 161, End Line: 180
/// Performs AES IGE encryption or decryption
///
/// AES IGE (Infinite Garble Extension) is a form of AES block cipher utilized in
/// OpenSSL.  Infinite Garble refers to propagating forward errors.  IGE, like other
/// block ciphers implemented for AES requires an initialization vector.  The IGE mode
/// allows a stream of blocks to be encrypted or decrypted without having the entire
/// plaintext available.  For more information, visit [AES IGE Encryption].
///
/// This block cipher uses 16 byte blocks.  The rust implementation will panic
/// if the input or output does not meet this 16-byte boundary.  Attention must
/// be made in this low level implementation to pad the value to the 128-bit boundary.
///
/// [AES IGE Encryption]: http://www.links.org/files/openssl-ige.pdf
///
/// # Panics
///
/// Panics if `in_` is not the same length as `out`, if that length is not a multiple of 16, or if
/// `iv` is not at least 32 bytes.
#[cfg(not(boringssl))]
#[cfg(not(osslconf = "OPENSSL_NO_DEPRECATED_3_0"))]
#[corresponds(AES_ige_encrypt)]
pub fn aes_ige(in_: &[u8], out: &mut [u8], key: &AesKey, iv: &mut [u8], mode: Mode) {
    unsafe {
        assert!(in_.len() == out.len());
        assert!(in_.len() % ffi::AES_BLOCK_SIZE as usize == 0);
        assert!(iv.len() >= ffi::AES_BLOCK_SIZE as usize * 2);
        let mode = match mode {
            Mode::Encrypt => ffi::AES_ENCRYPT,
            Mode::Decrypt => ffi::AES_DECRYPT,
        };
        ffi::AES_ige_encrypt(
            in_.as_ptr() as *const _,
            out.as_mut_ptr() as *mut _,
            in_.len(),
            &key.0,
            iv.as_mut_ptr() as *mut _,
            mode,
        );
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: wrap_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Found function with unsafe block in wrap_key:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Start Line: 196, End Line: 219
/// Wrap a key, according to [RFC 3394](https://tools.ietf.org/html/rfc3394)
///
/// * `key`: The key-encrypting-key to use. Must be a encrypting key
/// * `iv`: The IV to use. You must use the same IV for both wrapping and unwrapping
/// * `out`: The output buffer to store the ciphertext
/// * `in_`: The input buffer, storing the key to be wrapped
///
/// Returns the number of bytes written into `out`
///
/// # Panics
///
/// Panics if either `out` or `in_` do not have sizes that are a multiple of 8, or if
/// `out` is not 8 bytes longer than `in_`
#[corresponds(AES_wrap_key)]
pub fn wrap_key(
    key: &AesKey,
    iv: Option<[u8; 8]>,
    out: &mut [u8],
    in_: &[u8],
) -> Result<usize, KeyError> {
    unsafe {
        assert!(out.len() >= in_.len() + 8);
        let written = ffi::AES_wrap_key(
            &key.0 as *const _ as *mut _,
            iv.as_ref().map_or(ptr::null(), |iv| iv.as_ptr() as *const _),
            out.as_ptr() as *mut _,
            in_.as_ptr() as *const _,
            in_.len() as AesSizeType,
        );
        if written <= 0 { Err(KeyError(())) } else { Ok(written as usize) }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: unwrap_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Found function with unsafe block in unwrap_key:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\aes.rs
Start Line: 235, End Line: 259
/// Unwrap a key, according to [RFC 3394](https://tools.ietf.org/html/rfc3394)
///
/// * `key`: The key-encrypting-key to decrypt the wrapped key. Must be a decrypting key
/// * `iv`: The same IV used for wrapping the key
/// * `out`: The buffer to write the unwrapped key to
/// * `in_`: The input ciphertext
///
/// Returns the number of bytes written into `out`
///
/// # Panics
///
/// Panics if either `out` or `in_` do not have sizes that are a multiple of 8, or
/// if `in_` is not 8 bytes longer than `out`
#[corresponds(AES_unwrap_key)]
pub fn unwrap_key(
    key: &AesKey,
    iv: Option<[u8; 8]>,
    out: &mut [u8],
    in_: &[u8],
) -> Result<usize, KeyError> {
    unsafe {
        assert!(out.len() + 8 <= in_.len());
        let written = ffi::AES_unwrap_key(
            &key.0 as *const _ as *mut _,
            iv.as_ref().map_or(ptr::null(), |iv| iv.as_ptr() as *const _),
            out.as_ptr() as *mut _,
            in_.as_ptr() as *const _,
            in_.len() as AesSizeType,
        );
        if written <= 0 { Err(KeyError(())) } else { Ok(written as usize) }
    }
}



Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 3 statements, large unsafe: false, function: fmt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 1 statements, large unsafe: false, function: diff, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 2 statements, large unsafe: false, function: from_period, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 2 statements, large unsafe: false, function: from_unix, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 4 statements, large unsafe: false, function: from_str, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 4 statements, large unsafe: false, function: from_str_x509, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 4 statements, large unsafe: true, function: as_utf8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Start Line: 440, End Line: 450
/// Converts the ASN.1 underlying format to UTF8
///
/// ASN.1 strings may utilize UTF-16, ASCII, BMP, or UTF8.  This is important to
/// consume the string in a meaningful way without knowing the underlying
/// format.
#[corresponds(ASN1_STRING_to_UTF8)]
pub fn as_utf8(&self) -> Result<OpensslString, ErrorStack> {
    unsafe {
        let mut ptr = ptr::null_mut();
        let len = ffi::ASN1_STRING_to_UTF8(&mut ptr, self.as_ptr());
        if len < 0 {
            return Err(ErrorStack::get());
        }
        Ok(OpensslString::from_ptr(ptr as *mut c_char))
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: as_slice, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 1 statements, large unsafe: false, function: len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 1 statements, large unsafe: false, function: get, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 1 statements, large unsafe: false, function: to_bn, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 1 statements, large unsafe: false, function: to_owned, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 3 statements, large unsafe: false, function: new_from_bytes, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 1 statements, large unsafe: false, function: nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Checking unsafe block with 1 statements, large unsafe: false, function: get_i64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\asn1.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\base64.rs
Unsafe block with set_len detected in function: encode_block, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\base64.rs
Checking unsafe block with 3 statements, large unsafe: true, function: encode_block, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\base64.rs
Unsafe block with set_len detected in function: decode_block, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\base64.rs
Checking unsafe block with 2 statements, large unsafe: true, function: decode_block, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\base64.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bio.rs
Checking unsafe block with 1 statements, large unsafe: false, function: drop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bio.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bio.rs
Checking unsafe block with 3 statements, large unsafe: false, function: get_buf, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bio.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new_secure, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: clear, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add_word, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sub_word, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mul_word, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: true, function: div_word, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Start Line: 187, End Line: 196
/// Divides `self` by a `u32`, returning the remainder.
#[corresponds(BN_div_word)]
#[allow(clippy::useless_conversion)]
pub fn div_word(&mut self, w: u32) -> Result<u64, ErrorStack> {
    unsafe {
        let r = ffi::BN_div_word(self.as_ptr(), w.into());
        if r == ffi::BN_ULONG::MAX { Err(ErrorStack::get()) } else { Ok(r.into()) }
    }
}



Checking unsafe block with 2 statements, large unsafe: true, function: mod_word, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Start Line: 201, End Line: 210
/// Returns the result of `self` modulo `w`.
#[corresponds(BN_mod_word)]
#[allow(clippy::useless_conversion)]
pub fn mod_word(&self, w: u32) -> Result<u64, ErrorStack> {
    unsafe {
        let r = ffi::BN_mod_word(self.as_ptr(), w.into());
        if r == ffi::BN_ULONG::MAX { Err(ErrorStack::get()) } else { Ok(r.into()) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: rand_range, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: pseudo_rand_range, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_bit, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: clear_bit, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: is_bit_set, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mask_bits, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: lshift1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: rshift1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: checked_add, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: checked_sub, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: lshift, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: rshift, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: to_owned, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_negative, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: ucmp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: is_negative, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: is_odd, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: num_bits, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: rand, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: pseudo_rand, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: generate_prime, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: checked_mul, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: checked_div, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: checked_rem, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: div_rem, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sqr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: nnmod, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mod_add, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mod_sub, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mod_mul, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mod_sqr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mod_sqrt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: exp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mod_exp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mod_inverse, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: gcd, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: is_prime, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: is_prime_fasttest, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Unsafe block with set_len detected in function: to_vec, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: true, function: to_vec, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Start Line: 818, End Line: 826
/// Returns a big-endian byte vector representation of the absolute value of `self`.
///
/// `self` can be recreated by using `from_slice`.
///
/// ```
/// # use openssl::bn::BigNum;
/// let s = -BigNum::from_u32(4543).unwrap();
/// let r = BigNum::from_u32(4543).unwrap();
///
/// let s_vec = s.to_vec();
/// assert_eq!(BigNum::from_slice(&s_vec).unwrap(), r);
/// ```
#[corresponds(BN_bn2bin)]
pub fn to_vec(&self) -> Vec<u8> {
    let size = self.num_bytes() as usize;
    let mut v = Vec::with_capacity(size);
    unsafe {
        ffi::BN_bn2bin(self.as_ptr(), v.as_mut_ptr());
        v.set_len(size);
    }
    v
}



Unsafe block with set_len detected in function: to_vec_padded, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: true, function: to_vec_padded, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Start Line: 851, End Line: 858
/// Returns a big-endian byte vector representation of the absolute value of `self` padded
/// to `pad_to` bytes.
///
/// If `pad_to` is less than `self.num_bytes()` then an error is returned.
///
/// `self` can be recreated by using `from_slice`.
///
/// ```
/// # use openssl::bn::BigNum;
/// let bn = BigNum::from_u32(0x4543).unwrap();
///
/// let bn_vec = bn.to_vec_padded(4).unwrap();
/// assert_eq!(&bn_vec, &[0, 0, 0x45, 0x43]);
///
/// let r = bn.to_vec_padded(1);
/// assert!(r.is_err());
///
/// let bn = -BigNum::from_u32(0x4543).unwrap();
/// let bn_vec = bn.to_vec_padded(4).unwrap();
/// assert_eq!(&bn_vec, &[0, 0, 0x45, 0x43]);
/// ```
#[corresponds(BN_bn2binpad)]
#[cfg(any(ossl110, libressl340, boringssl))]
pub fn to_vec_padded(&self, pad_to: i32) -> Result<Vec<u8>, ErrorStack> {
    let mut v = Vec::with_capacity(pad_to as usize);
    unsafe {
        cvt(ffi::BN_bn2binpad(self.as_ptr(), v.as_mut_ptr(), pad_to))?;
        v.set_len(pad_to as usize);
    }
    Ok(v)
}



Checking unsafe block with 2 statements, large unsafe: false, function: to_dec_str, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: to_hex_str, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: to_asn1_integer, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_const_time, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: is_const_time, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: is_secure, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_u32, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 5 statements, large unsafe: true, function: from_dec_str, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Start Line: 961, End Line: 969
/// Creates a `BigNum` from a decimal string.
#[corresponds(BN_dec2bn)]
pub fn from_dec_str(s: &str) -> Result<BigNum, ErrorStack> {
    unsafe {
        ffi::init();
        let c_str = CString::new(s.as_bytes()).unwrap();
        let mut bn = ptr::null_mut();
        cvt(ffi::BN_dec2bn(&mut bn, c_str.as_ptr() as *const _))?;
        Ok(BigNum::from_ptr(bn))
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: from_hex_str, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Start Line: 973, End Line: 981
/// Creates a `BigNum` from a hexadecimal string.
#[corresponds(BN_hex2bn)]
pub fn from_hex_str(s: &str) -> Result<BigNum, ErrorStack> {
    unsafe {
        ffi::init();
        let c_str = CString::new(s.as_bytes()).unwrap();
        let mut bn = ptr::null_mut();
        cvt(ffi::BN_hex2bn(&mut bn, c_str.as_ptr() as *const _))?;
        Ok(BigNum::from_ptr(bn))
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: get_rfc2409_prime_768, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_rfc2409_prime_1024, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_rfc3526_prime_1536, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_rfc3526_prime_2048, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_rfc3526_prime_3072, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_rfc3526_prime_4096, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_rfc3526_prime_6144, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_rfc3526_prime_8192, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 3 statements, large unsafe: false, function: from_slice, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 3 statements, large unsafe: false, function: copy_from_slice, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cmp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\bn.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 2 statements, large unsafe: true, function: from_nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Start Line: 121, End Line: 130
/// Looks up the cipher for a certain nid.
#[corresponds(EVP_get_cipherbynid)]
pub fn from_nid(nid: Nid) -> Option<&'static CipherRef> {
    unsafe {
        let ptr = ffi::EVP_get_cipherbyname(ffi::OBJ_nid2sn(nid.as_raw()));
        if ptr.is_null() { None } else { Some(CipherRef::from_ptr(ptr as *mut _)) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: fetch, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_xts, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_xts, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ctr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_cfb1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_cfb8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_gcm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ccm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ocb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_wrap, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_wrap_pad, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ctr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_cfb1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_cfb8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_gcm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ccm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ocb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_wrap, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_wrap_pad, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ctr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_cfb1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_cfb8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_gcm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ccm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ocb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_wrap, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_wrap_pad, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bf_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bf_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bf_cfb64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bf_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_cfb8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_cfb64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: rc4, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia128_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia128_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia128_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia128_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia192_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia192_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia192_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia192_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia256_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia256_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia256_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia256_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cast5_cfb64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cast5_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cast5_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cast5_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: idea_cfb64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: idea_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: idea_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: idea_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: chacha20, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: chacha20_poly1305, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seed_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seed_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seed_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seed_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_ctr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: key_length, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: iv_length, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Checking unsafe block with 1 statements, large unsafe: false, function: block_size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: copy, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cipher_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seal_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: open_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: assert_cipher, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: block_size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: key_length, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: rand_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_key_length, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: iv_length, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: num, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_iv_length, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: tag_length, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: tag, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_tag_length, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_tag, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_padding, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_data_len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_flags, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cipher_update, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cipher_update_inplace, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cipher_final, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cipher_ctx.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
Checking unsafe block with 5 statements, large unsafe: true, function: decrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
Start Line: 76, End Line: 96
/// Given the sender's private key, `pkey` and the recipient's certificate, `cert`,
/// decrypt the data in `self`.
#[corresponds(CMS_decrypt)]
pub fn decrypt<T>(&self, pkey: &PKeyRef<T>, cert: &X509) -> Result<Vec<u8>, ErrorStack>
where
    T: HasPrivate,
{
    unsafe {
        let pkey = pkey.as_ptr();
        let cert = cert.as_ptr();
        let out = MemBio::new()?;
        cvt(
            ffi::CMS_decrypt(self.as_ptr(), pkey, cert, ptr::null_mut(), out.as_ptr(), 0),
        )?;
        Ok(out.get_buf().to_owned())
    }
}



Checking unsafe block with 4 statements, large unsafe: false, function: decrypt_without_cert_check, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
Checking unsafe block with 3 statements, large unsafe: false, function: smime_read_cms, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
Checking unsafe block with 7 statements, large unsafe: true, function: sign, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
Start Line: 174, End Line: 204
/// Given a signing cert `signcert`, private key `pkey`, a certificate stack `certs`,
/// data `data` and flags `flags`, create a CmsContentInfo struct.
///
/// All arguments are optional.
#[corresponds(CMS_sign)]
pub fn sign<T>(
    signcert: Option<&X509Ref>,
    pkey: Option<&PKeyRef<T>>,
    certs: Option<&StackRef<X509>>,
    data: Option<&[u8]>,
    flags: CMSOptions,
) -> Result<CmsContentInfo, ErrorStack>
where
    T: HasPrivate,
{
    unsafe {
        let signcert = signcert.map_or(ptr::null_mut(), |p| p.as_ptr());
        let pkey = pkey.map_or(ptr::null_mut(), |p| p.as_ptr());
        let data_bio = match data {
            Some(data) => Some(MemBioSlice::new(data)?),
            None => None,
        };
        let data_bio_ptr = data_bio.as_ref().map_or(ptr::null_mut(), |p| p.as_ptr());
        let certs = certs.map_or(ptr::null_mut(), |p| p.as_ptr());
        let cms = cvt_p(
            ffi::CMS_sign(signcert, pkey, certs, data_bio_ptr, flags.bits()),
        )?;
        Ok(CmsContentInfo::from_ptr(cms))
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: encrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
Checking unsafe block with 8 statements, large unsafe: true, function: verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\cms.rs
Start Line: 241, End Line: 277
/// Verify this CmsContentInfo's signature,
/// This will search the 'certs' list for the signing certificate.
/// Additional certificates, needed for building the certificate chain, may be
/// given in 'store' as well as additional CRLs.
/// A detached signature may be passed in `detached_data`. The signed content
/// without signature, will be copied into output_data if it is present.
///
#[corresponds(CMS_verify)]
pub fn verify(
    &mut self,
    certs: Option<&StackRef<X509>>,
    store: Option<&X509StoreRef>,
    detached_data: Option<&[u8]>,
    output_data: Option<&mut Vec<u8>>,
    flags: CMSOptions,
) -> Result<(), ErrorStack> {
    unsafe {
        let certs_ptr = certs.map_or(ptr::null_mut(), |p| p.as_ptr());
        let store_ptr = store.map_or(ptr::null_mut(), |p| p.as_ptr());
        let detached_data_bio = match detached_data {
            Some(data) => Some(MemBioSlice::new(data)?),
            None => None,
        };
        let detached_data_bio_ptr = detached_data_bio
            .as_ref()
            .map_or(ptr::null_mut(), |p| p.as_ptr());
        let out_bio = MemBio::new()?;
        cvt(
            ffi::CMS_verify(
                self.as_ptr(),
                certs_ptr,
                store_ptr,
                detached_data_bio_ptr,
                out_bio.as_ptr(),
                flags.bits(),
            ),
        )?;
        if let Some(data) = output_data {
            data.clear();
            data.extend_from_slice(out_bio.get_buf());
        }
        Ok(())
    }
}



Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\conf.rs
Checking unsafe block with 2 statements, large unsafe: false, function: default, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\conf.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\conf.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\derive.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\derive.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_peer, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\derive.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_peer_ex, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\derive.rs
Checking unsafe block with 2 statements, large unsafe: false, function: len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\derive.rs
Checking unsafe block with 1 statements, large unsafe: false, function: derive, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\derive.rs
Checking unsafe block with 1 statements, large unsafe: false, function: drop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\derive.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 3 statements, large unsafe: false, function: check_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 4 statements, large unsafe: false, function: from_pqg, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 4 statements, large unsafe: false, function: set_public_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 6 statements, large unsafe: true, function: set_private_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Start Line: 90, End Line: 100
/// Sets the private key on the DH object and recomputes the public key.
pub fn set_private_key(self, priv_key: BigNum) -> Result<Dh<Private>, ErrorStack> {
    unsafe {
        let dh_ptr = self.0;
        cvt(DH_set0_key(dh_ptr, ptr::null_mut(), priv_key.as_ptr()))?;
        mem::forget(priv_key);
        cvt(ffi::DH_generate_key(dh_ptr))?;
        mem::forget(self);
        Ok(Dh::from_ptr(dh_ptr))
    }
}



Checking unsafe block with 4 statements, large unsafe: false, function: set_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 3 statements, large unsafe: false, function: generate_params, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 4 statements, large unsafe: false, function: generate_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_1024_160, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_2048_224, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_2048_256, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 2 statements, large unsafe: false, function: prime_p, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 2 statements, large unsafe: true, function: prime_q, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Start Line: 203, End Line: 213
/// Returns the prime `q` from the DH instance.
#[corresponds(DH_get0_pqg)]
pub fn prime_q(&self) -> Option<&BigNumRef> {
    let mut q = ptr::null();
    unsafe {
        DH_get0_pqg(self.as_ptr(), ptr::null_mut(), &mut q, ptr::null_mut());
        if q.is_null() { None } else { Some(BigNumRef::from_ptr(q as *mut _)) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: generator, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 2 statements, large unsafe: false, function: public_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 4 statements, large unsafe: false, function: compute_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Checking unsafe block with 2 statements, large unsafe: false, function: private_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dh.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: to_owned, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: pub_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: priv_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 1 statements, large unsafe: false, function: size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: p, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: q, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: g, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 4 statements, large unsafe: false, function: from_pqg, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: generate_params, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 4 statements, large unsafe: false, function: generate_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 6 statements, large unsafe: true, function: from_private_components, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Start Line: 251, End Line: 267
/// Create a DSA key pair with the given parameters
///
/// `p`, `q` and `g` are the common parameters.
/// `priv_key` is the private component of the key pair.
/// `pub_key` is the public component of the key. Can be computed via `g^(priv_key) mod p`
pub fn from_private_components(
    p: BigNum,
    q: BigNum,
    g: BigNum,
    priv_key: BigNum,
    pub_key: BigNum,
) -> Result<Dsa<Private>, ErrorStack> {
    ffi::init();
    unsafe {
        let dsa = Dsa::from_ptr(cvt_p(ffi::DSA_new())?);
        cvt(DSA_set0_pqg(dsa.0, p.as_ptr(), q.as_ptr(), g.as_ptr()))?;
        mem::forget((p, q, g));
        cvt(DSA_set0_key(dsa.0, pub_key.as_ptr(), priv_key.as_ptr()))?;
        mem::forget((pub_key, priv_key));
        Ok(dsa)
    }
}



Checking unsafe block with 6 statements, large unsafe: true, function: from_public_components, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Start Line: 293, End Line: 308
/// Create a new DSA key with only public components.
///
/// `p`, `q` and `g` are the common parameters.
/// `pub_key` is the public component of the key.
pub fn from_public_components(
    p: BigNum,
    q: BigNum,
    g: BigNum,
    pub_key: BigNum,
) -> Result<Dsa<Public>, ErrorStack> {
    ffi::init();
    unsafe {
        let dsa = Dsa::from_ptr(cvt_p(ffi::DSA_new())?);
        cvt(DSA_set0_pqg(dsa.0, p.as_ptr(), q.as_ptr(), g.as_ptr()))?;
        mem::forget((p, q, g));
        cvt(DSA_set0_key(dsa.0, pub_key.as_ptr(), ptr::null_mut()))?;
        mem::forget(pub_key);
        Ok(dsa)
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: r, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: s, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\dsa.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: from_curve_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_components, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: components_gfp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: components_gf2m, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cofactor, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: degree, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: order_bits, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: generator, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_generator, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: order, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_asn1_flag, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: asn1_flag, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: curve_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mul, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mul_generator, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: mul_full, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: invert, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 5 statements, large unsafe: true, function: to_bytes, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Start Line: 439, End Line: 472
/// Serializes the point to a binary representation.
#[corresponds(EC_POINT_point2oct)]
pub fn to_bytes(
    &self,
    group: &EcGroupRef,
    form: PointConversionForm,
    ctx: &mut BigNumContextRef,
) -> Result<Vec<u8>, ErrorStack> {
    unsafe {
        let len = ffi::EC_POINT_point2oct(
            group.as_ptr(),
            self.as_ptr(),
            form.0,
            ptr::null_mut(),
            0,
            ctx.as_ptr(),
        );
        if len == 0 {
            return Err(ErrorStack::get());
        }
        let mut buf = vec![0; len];
        let len = ffi::EC_POINT_point2oct(
            group.as_ptr(),
            self.as_ptr(),
            form.0,
            buf.as_mut_ptr(),
            len,
            ctx.as_ptr(),
        );
        if len == 0 { Err(ErrorStack::get()) } else { Ok(buf) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: to_hex_str, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: to_owned, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: eq, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: affine_coordinates, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: affine_coordinates_gfp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_affine_coordinates_gfp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: affine_coordinates_gf2m, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: is_infinity, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: is_on_curve, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_bytes, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: from_hex_str, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: private_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: public_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 2 statements, large unsafe: false, function: group, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: check_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_group, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_public_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_public_key_affine_coordinates, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: generate, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_private_components, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ec.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ecdsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: sign, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ecdsa.rs
Checking unsafe block with 4 statements, large unsafe: false, function: from_private_components, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ecdsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ecdsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: r, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ecdsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: s, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ecdsa.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: drop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 5 statements, large unsafe: true, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Start Line: 76, End Line: 95
/// Creates a new `Encrypter`.
///
/// OpenSSL documentation at [`EVP_PKEY_encrypt_init`].
///
/// [`EVP_PKEY_encrypt_init`]: https://www.openssl.org/docs/manmaster/man3/EVP_PKEY_encrypt_init.html
pub fn new<T>(pkey: &'a PKeyRef<T>) -> Result<Encrypter<'a>, ErrorStack>
where
    T: HasPublic,
{
    unsafe {
        ffi::init();
        let pctx = cvt_p(ffi::EVP_PKEY_CTX_new(pkey.as_ptr(), ptr::null_mut()))?;
        let r = ffi::EVP_PKEY_encrypt_init(pctx);
        if r != 1 {
            ffi::EVP_PKEY_CTX_free(pctx);
            return Err(ErrorStack::get());
        }
        Ok(Encrypter { pctx, _p: PhantomData })
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: rsa_padding, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_padding, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_mgf1_md, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_oaep_md, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 3 statements, large unsafe: false, function: set_rsa_oaep_label, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: encrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: encrypt_len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: decrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Checking unsafe block with 1 statements, large unsafe: false, function: decrypt_len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\encrypt.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\envelope.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\envelope.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\error.rs
Checking unsafe block with 3 statements, large unsafe: false, function: put_error, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\error.rs
Checking unsafe block with 4 statements, large unsafe: true, function: library, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\error.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\error.rs
Start Line: 228, End Line: 237
/// Returns the name of the library reporting the error, if available.
pub fn library(&self) -> Option<&'static str> {
    unsafe {
        let cstr = ffi::ERR_lib_error_string(self.code);
        if cstr.is_null() {
            return None;
        }
        let bytes = CStr::from_ptr(cstr as *const _).to_bytes();
        Some(str::from_utf8(bytes).unwrap())
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: library_code, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\error.rs
Checking unsafe block with 4 statements, large unsafe: true, function: reason, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\error.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\error.rs
Start Line: 254, End Line: 263
/// Returns the reason for the error.
pub fn reason(&self) -> Option<&'static str> {
    unsafe {
        let cstr = ffi::ERR_reason_error_string(self.code);
        if cstr.is_null() {
            return None;
        }
        let bytes = CStr::from_ptr(cstr as *const _).to_bytes();
        Some(str::from_utf8(bytes).unwrap())
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: reason_code, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ex_data.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\fips.rs
Checking unsafe block with 1 statements, large unsafe: false, function: enable, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\fips.rs
Checking unsafe block with 1 statements, large unsafe: false, function: enabled, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\fips.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 2 statements, large unsafe: true, function: from_nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Start Line: 72, End Line: 81
/// Returns the `MessageDigest` corresponding to an `Nid`.
///
/// This corresponds to [`EVP_get_digestbynid`].
///
/// [`EVP_get_digestbynid`]: https://www.openssl.org/docs/manmaster/crypto/EVP_DigestInit.html
pub fn from_nid(type_: Nid) -> Option<MessageDigest> {
    unsafe {
        let ptr = ffi::EVP_get_digestbynid(type_.as_raw());
        if ptr.is_null() { None } else { Some(MessageDigest(ptr)) }
    }
}



Checking unsafe block with 2 statements, large unsafe: true, function: from_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Start Line: 88, End Line: 99
/// Returns the `MessageDigest` corresponding to an algorithm name.
///
/// This corresponds to [`EVP_get_digestbyname`].
///
/// [`EVP_get_digestbyname`]: https://www.openssl.org/docs/manmaster/crypto/EVP_DigestInit.html
pub fn from_name(name: &str) -> Option<MessageDigest> {
    ffi::init();
    let name = CString::new(name).ok()?;
    unsafe {
        let ptr = ffi::EVP_get_digestbyname(name.as_ptr());
        if ptr.is_null() { None } else { Some(MessageDigest(ptr)) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: null, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: md5, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha224, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha256, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha384, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha512, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha3_224, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha3_256, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha3_384, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha3_512, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: shake_128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: shake_256, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: ripemd160, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm3, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: block_size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: type_, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 1 statements, large unsafe: false, function: update, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 6 statements, large unsafe: true, function: finish, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Start Line: 293, End Line: 314
/// Returns the hash of the data written and resets the non-XOF hasher.
pub fn finish(&mut self) -> Result<DigestBytes, ErrorStack> {
    if self.state == Finalized {
        self.init()?;
    }
    unsafe {
        #[cfg(not(boringssl))]
        let mut len = ffi::EVP_MAX_MD_SIZE;
        #[cfg(boringssl)]
        let mut len = ffi::EVP_MAX_MD_SIZE as u32;
        let mut buf = [0; ffi::EVP_MAX_MD_SIZE as usize];
        cvt(ffi::EVP_DigestFinal_ex(self.ctx, buf.as_mut_ptr(), &mut len))?;
        self.state = Finalized;
        Ok(DigestBytes {
            buf,
            len: len as usize,
        })
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: finish_xof, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Checking unsafe block with 5 statements, large unsafe: true, function: clone, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Start Line: 348, End Line: 362
fn clone(&self) -> Hasher {
    let ctx = unsafe {
        let ctx = EVP_MD_CTX_new();
        assert!(! ctx.is_null());
        let r = ffi::EVP_MD_CTX_copy_ex(ctx, self.ctx);
        assert_eq!(r, 1);
        ctx
    };
    Hasher {
        ctx,
        md: self.md,
        type_: self.type_,
        state: self.state,
    }
}



Checking unsafe block with 2 statements, large unsafe: true, function: drop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\hash.rs
Start Line: 366, End Line: 373
fn drop(&mut self) {
    unsafe {
        if self.state != Finalized {
            drop(self.finish());
        }
        EVP_MD_CTX_free(self.ctx);
    }
}



Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\lib_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\lib_ctx.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\macros.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 2 statements, large unsafe: true, function: from_nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Start Line: 82, End Line: 91
/// Returns the `Md` corresponding to an [`Nid`].
#[corresponds(EVP_get_digestbynid)]
pub fn from_nid(type_: Nid) -> Option<&'static MdRef> {
    unsafe {
        let ptr = ffi::EVP_get_digestbynid(type_.as_raw());
        if ptr.is_null() { None } else { Some(MdRef::from_ptr(ptr as *mut _)) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: fetch, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: null, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: md5, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha224, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha256, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha384, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha512, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha3_224, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha3_256, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha3_384, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sha3_512, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: shake128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: shake256, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: ripemd160, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm3, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: block_size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Checking unsafe block with 1 statements, large unsafe: false, function: type_, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: digest_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 3 statements, large unsafe: false, function: digest_sign_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 3 statements, large unsafe: false, function: digest_verify_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: digest_update, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: digest_sign_update, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: digest_verify_update, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: digest_final, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: digest_final_xof, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: digest_sign_final, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: digest_verify_final, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: digest_sign, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: digest_verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: reset, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\md_ctx.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\memcmp.rs
Checking unsafe block with 1 statements, large unsafe: false, function: eq, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\memcmp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\nid.rs
Checking unsafe block with 6 statements, large unsafe: true, function: create, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\nid.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\nid.rs
Start Line: 66, End Line: 79
/// Creates a new `Nid` for the `oid` with short name `sn` and long name `ln`.
#[corresponds(OBJ_create)]
pub fn create(oid: &str, sn: &str, ln: &str) -> Result<Nid, ErrorStack> {
    unsafe {
        ffi::init();
        let oid = CString::new(oid).unwrap();
        let sn = CString::new(sn).unwrap();
        let ln = CString::new(ln).unwrap();
        let raw = ffi::OBJ_create(oid.as_ptr(), sn.as_ptr(), ln.as_ptr());
        if raw == ffi::NID_undef { Err(ErrorStack::get()) } else { Ok(Nid(raw)) }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: signature_algorithms, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\nid.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\nid.rs
Start Line: 86, End Line: 99
/// Returns the `Nid`s of the digest and public key algorithms associated with a signature ID.
///
/// This corresponds to `OBJ_find_sigid_algs`.
#[corresponds(OBJ_find_sigid_algs)]
#[allow(clippy::trivially_copy_pass_by_ref)]
pub fn signature_algorithms(&self) -> Option<SignatureAlgorithms> {
    unsafe {
        let mut digest = 0;
        let mut pkey = 0;
        if ffi::OBJ_find_sigid_algs(self.0, &mut digest, &mut pkey) == 1 {
            Some(SignatureAlgorithms {
                digest: Nid(digest),
                pkey: Nid(pkey),
            })
        } else {
            None
        }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: long_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\nid.rs
Checking unsafe block with 1 statements, large unsafe: false, function: short_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\nid.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Checking unsafe block with 1 statements, large unsafe: false, function: check_validity, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Checking unsafe block with 7 statements, large unsafe: true, function: find_status, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Start Line: 180, End Line: 211
/// Looks up the status for the specified certificate ID.
#[corresponds(OCSP_resp_find_status)]
pub fn find_status<'a>(&'a self, id: &OcspCertIdRef) -> Option<OcspStatus<'a>> {
    unsafe {
        let mut status = ffi::V_OCSP_CERTSTATUS_UNKNOWN;
        let mut reason = ffi::OCSP_REVOKED_STATUS_NOSTATUS;
        let mut revocation_time = ptr::null_mut();
        let mut this_update = ptr::null_mut();
        let mut next_update = ptr::null_mut();
        let r = ffi::OCSP_resp_find_status(
            self.as_ptr(),
            id.as_ptr(),
            &mut status,
            &mut reason,
            &mut revocation_time,
            &mut this_update,
            &mut next_update,
        );
        if r == 1 {
            let revocation_time = Asn1GeneralizedTimeRef::from_const_ptr_opt(
                revocation_time,
            );
            Some(OcspStatus {
                status: OcspCertStatus(status),
                reason: OcspRevokedStatus(status),
                revocation_time,
                this_update: Asn1GeneralizedTimeRef::from_ptr(this_update),
                next_update: Asn1GeneralizedTimeRef::from_ptr(next_update),
            })
        } else {
            None
        }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: from_cert, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Checking unsafe block with 2 statements, large unsafe: false, function: create, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Checking unsafe block with 1 statements, large unsafe: false, function: status, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Checking unsafe block with 1 statements, large unsafe: false, function: basic, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Checking unsafe block with 3 statements, large unsafe: false, function: add_id, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ocsp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs12.rs
Checking unsafe block with 9 statements, large unsafe: true, function: parse2, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs12.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs12.rs
Start Line: 50, End Line: 72
/// Extracts the contents of the `Pkcs12`.
#[corresponds(PKCS12_parse)]
pub fn parse2(&self, pass: &str) -> Result<ParsedPkcs12_2, ErrorStack> {
    unsafe {
        let pass = CString::new(pass.as_bytes()).unwrap();
        let mut pkey = ptr::null_mut();
        let mut cert = ptr::null_mut();
        let mut ca = ptr::null_mut();
        cvt(
            ffi::PKCS12_parse(
                self.as_ptr(),
                pass.as_ptr(),
                &mut pkey,
                &mut cert,
                &mut ca,
            ),
        )?;
        let pkey = PKey::from_ptr_opt(pkey);
        let cert = X509::from_ptr_opt(cert);
        let ca = Stack::from_ptr_opt(ca);
        Ok(ParsedPkcs12_2 { pkey, cert, ca })
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: pkey, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs12.rs
Checking unsafe block with 12 statements, large unsafe: true, function: build2, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs12.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs12.rs
Start Line: 226, End Line: 282
/// Builds the PKCS#12 object.
#[corresponds(PKCS12_create)]
pub fn build2(&self, password: &str) -> Result<Pkcs12, ErrorStack> {
    unsafe {
        let pass = CString::new(password).unwrap();
        let pass = pass.as_ptr();
        let friendly_name = self.name.as_ref().map_or(ptr::null(), |p| p.as_ptr());
        let pkey = self.pkey.as_ref().map_or(ptr::null(), |p| p.as_ptr());
        let cert = self.cert.as_ref().map_or(ptr::null(), |p| p.as_ptr());
        let ca = self.ca.as_ref().map(|ca| ca.as_ptr()).unwrap_or(ptr::null_mut());
        let nid_key = self.nid_key.as_raw();
        let nid_cert = self.nid_cert.as_raw();
        let keytype = 0;
        let pkcs12 = cvt_p(
                ffi::PKCS12_create(
                    pass as *mut _,
                    friendly_name as *mut _,
                    pkey as *mut _,
                    cert as *mut _,
                    ca,
                    nid_key,
                    nid_cert,
                    self.iter,
                    self.mac_iter,
                    keytype,
                ),
            )
            .map(Pkcs12)?;
        #[cfg(not(boringssl))]
        {
            let md_type = self
                .mac_md
                .map(|md_type| md_type.as_ptr())
                .unwrap_or(ptr::null());
            cvt(
                ffi::PKCS12_set_mac(
                    pkcs12.as_ptr(),
                    pass,
                    -1,
                    ptr::null_mut(),
                    0,
                    self.mac_iter,
                    md_type,
                ),
            )?;
        }
        Ok(pkcs12)
    }
}



Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs5.rs
Checking unsafe block with 11 statements, large unsafe: true, function: bytes_to_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs5.rs
Found function with unsafe block in bytes_to_key:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs5.rs
Start Line: 33, End Line: 87
/// Derives a key and an IV from various parameters.
///
/// If specified, `salt` must be 8 bytes in length.
///
/// If the total key and IV length is less than 16 bytes and MD5 is used then
/// the algorithm is compatible with the key derivation algorithm from PKCS#5
/// v1.5 or PBKDF1 from PKCS#5 v2.0.
///
/// New applications should not use this and instead use
/// `pbkdf2_hmac` or another more modern key derivation algorithm.
#[corresponds(EVP_BytesToKey)]
#[allow(clippy::useless_conversion)]
#[cfg(not(boringssl))]
pub fn bytes_to_key(
    cipher: Cipher,
    digest: MessageDigest,
    data: &[u8],
    salt: Option<&[u8]>,
    count: i32,
) -> Result<KeyIvPair, ErrorStack> {
    unsafe {
        assert!(data.len() <= c_int::MAX as usize);
        let salt_ptr = match salt {
            Some(salt) => {
                assert_eq!(salt.len(), ffi::PKCS5_SALT_LEN as usize);
                salt.as_ptr()
            }
            None => ptr::null(),
        };
        ffi::init();
        let mut iv = cipher.iv_len().map(|l| vec![0; l]);
        let cipher = cipher.as_ptr();
        let digest = digest.as_ptr();
        let len = cvt(
            ffi::EVP_BytesToKey(
                cipher,
                digest,
                salt_ptr,
                ptr::null(),
                data.len() as c_int,
                count.into(),
                ptr::null_mut(),
                ptr::null_mut(),
            ),
        )?;
        let mut key = vec![0; len as usize];
        let iv_ptr = iv.as_mut().map(|v| v.as_mut_ptr()).unwrap_or(ptr::null_mut());
        cvt(
            ffi::EVP_BytesToKey(
                cipher,
                digest,
                salt_ptr,
                data.as_ptr(),
                data.len() as c_int,
                count as c_int,
                key.as_mut_ptr(),
                iv_ptr,
            ),
        )?;
        Ok(KeyIvPair { key, iv })
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: pbkdf2_hmac, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs5.rs
Checking unsafe block with 2 statements, large unsafe: false, function: scrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs5.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Checking unsafe block with 3 statements, large unsafe: false, function: from_smime, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Checking unsafe block with 1 statements, large unsafe: false, function: encrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sign, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Checking unsafe block with 1 statements, large unsafe: false, function: to_smime, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Checking unsafe block with 1 statements, large unsafe: false, function: decrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Checking unsafe block with 4 statements, large unsafe: true, function: signers, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Start Line: 289, End Line: 311
/// Retrieve the signer's certificates from the PKCS#7 structure without verifying them.
#[corresponds(PKCS7_get0_signers)]
pub fn signers(
    &self,
    certs: &StackRef<X509>,
    flags: Pkcs7Flags,
) -> Result<Stack<X509>, ErrorStack> {
    unsafe {
        let ptr = cvt_p(
            ffi::PKCS7_get0_signers(self.as_ptr(), certs.as_ptr(), flags.bits()),
        )?;
        let stack = Stack::<X509>::from_ptr(ptr);
        for cert in &stack {
            mem::forget(cert.to_owned());
        }
        Ok(stack)
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: type_, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Checking unsafe block with 3 statements, large unsafe: true, function: signed, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Start Line: 322, End Line: 330
/// Get the signed data of a PKCS#7 structure of type PKCS7_SIGNED
pub fn signed(&self) -> Option<&Pkcs7SignedRef> {
    unsafe {
        if self.type_().map(|x| x.nid()) != Some(Nid::PKCS7_SIGNED) {
            return None;
        }
        let signed_data = (*self.as_ptr()).d.sign;
        Pkcs7SignedRef::from_const_ptr_opt(signed_data)
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: certificates, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkcs7.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 2 statements, large unsafe: false, function: to_owned, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 2 statements, large unsafe: false, function: rsa, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 2 statements, large unsafe: false, function: dsa, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 2 statements, large unsafe: false, function: dh, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 2 statements, large unsafe: false, function: ec_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 1 statements, large unsafe: false, function: id, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 1 statements, large unsafe: false, function: size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bits, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 1 statements, large unsafe: false, function: security_bits, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 1 statements, large unsafe: false, function: public_eq, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 6 statements, large unsafe: true, function: raw_public_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Start Line: 268, End Line: 285
/// Raw byte representation of a public key.
///
/// This function only works for algorithms that support raw public keys.
/// Currently this is: [`Id::X25519`], [`Id::ED25519`], [`Id::X448`] or [`Id::ED448`].
#[corresponds(EVP_PKEY_get_raw_public_key)]
#[cfg(any(ossl111, boringssl, libressl370))]
pub fn raw_public_key(&self) -> Result<Vec<u8>, ErrorStack> {
    unsafe {
        let mut len = 0;
        cvt(ffi::EVP_PKEY_get_raw_public_key(self.as_ptr(), ptr::null_mut(), &mut len))?;
        let mut buf = vec![0u8; len];
        cvt(
            ffi::EVP_PKEY_get_raw_public_key(self.as_ptr(), buf.as_mut_ptr(), &mut len),
        )?;
        buf.truncate(len);
        Ok(buf)
    }
}



Checking unsafe block with 6 statements, large unsafe: true, function: raw_private_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Start Line: 319, End Line: 336
/// Raw byte representation of a private key.
///
/// This function only works for algorithms that support raw private keys.
/// Currently this is: [`Id::HMAC`], [`Id::X25519`], [`Id::ED25519`], [`Id::X448`] or [`Id::ED448`].
#[corresponds(EVP_PKEY_get_raw_private_key)]
#[cfg(any(ossl111, boringssl, libressl370))]
pub fn raw_private_key(&self) -> Result<Vec<u8>, ErrorStack> {
    unsafe {
        let mut len = 0;
        cvt(
            ffi::EVP_PKEY_get_raw_private_key(self.as_ptr(), ptr::null_mut(), &mut len),
        )?;
        let mut buf = vec![0u8; len];
        cvt(
            ffi::EVP_PKEY_get_raw_private_key(self.as_ptr(), buf.as_mut_ptr(), &mut len),
        )?;
        buf.truncate(len);
        Ok(buf)
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: private_key_to_pkcs8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 3 statements, large unsafe: false, function: private_key_to_pkcs8_passphrase, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 5 statements, large unsafe: true, function: from_rsa, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Start Line: 411, End Line: 419
/// Creates a new `PKey` containing an RSA key.
#[corresponds(EVP_PKEY_assign_RSA)]
pub fn from_rsa(rsa: Rsa<T>) -> Result<PKey<T>, ErrorStack> {
    unsafe {
        let evp = cvt_p(ffi::EVP_PKEY_new())?;
        let pkey = PKey::from_ptr(evp);
        cvt(ffi::EVP_PKEY_assign_RSA(pkey.0, rsa.as_ptr()))?;
        mem::forget(rsa);
        Ok(pkey)
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: from_dsa, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Start Line: 423, End Line: 431
/// Creates a new `PKey` containing a DSA key.
#[corresponds(EVP_PKEY_assign_DSA)]
pub fn from_dsa(dsa: Dsa<T>) -> Result<PKey<T>, ErrorStack> {
    unsafe {
        let evp = cvt_p(ffi::EVP_PKEY_new())?;
        let pkey = PKey::from_ptr(evp);
        cvt(ffi::EVP_PKEY_assign_DSA(pkey.0, dsa.as_ptr()))?;
        mem::forget(dsa);
        Ok(pkey)
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: from_dh, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Start Line: 436, End Line: 444
/// Creates a new `PKey` containing a Diffie-Hellman key.
#[corresponds(EVP_PKEY_assign_DH)]
#[cfg(not(boringssl))]
pub fn from_dh(dh: Dh<T>) -> Result<PKey<T>, ErrorStack> {
    unsafe {
        let evp = cvt_p(ffi::EVP_PKEY_new())?;
        let pkey = PKey::from_ptr(evp);
        cvt(ffi::EVP_PKEY_assign_DH(pkey.0, dh.as_ptr()))?;
        mem::forget(dh);
        Ok(pkey)
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: from_dhx, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Start Line: 448, End Line: 460
/// Creates a new `PKey` containing a Diffie-Hellman key with type DHX.
#[cfg(all(not(boringssl), ossl110))]
pub fn from_dhx(dh: Dh<T>) -> Result<PKey<T>, ErrorStack> {
    unsafe {
        let evp = cvt_p(ffi::EVP_PKEY_new())?;
        let pkey = PKey::from_ptr(evp);
        cvt(ffi::EVP_PKEY_assign(pkey.0, ffi::EVP_PKEY_DHX, dh.as_ptr().cast()))?;
        mem::forget(dh);
        Ok(pkey)
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: from_ec_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Start Line: 464, End Line: 472
/// Creates a new `PKey` containing an elliptic curve key.
#[corresponds(EVP_PKEY_assign_EC_KEY)]
pub fn from_ec_key(ec_key: EcKey<T>) -> Result<PKey<T>, ErrorStack> {
    unsafe {
        let evp = cvt_p(ffi::EVP_PKEY_new())?;
        let pkey = PKey::from_ptr(evp);
        cvt(ffi::EVP_PKEY_assign_EC_KEY(pkey.0, ec_key.as_ptr()))?;
        mem::forget(ec_key);
        Ok(pkey)
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: hmac, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cmac, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 2 statements, large unsafe: false, function: ec_gen, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 6 statements, large unsafe: true, function: private_key_from_pkcs8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Start Line: 676, End Line: 689
/// Deserializes a DER-formatted PKCS#8 unencrypted private key.
///
/// This method is mainly for interoperability reasons. Encrypted keyfiles should be preferred.
pub fn private_key_from_pkcs8(der: &[u8]) -> Result<PKey<Private>, ErrorStack> {
    unsafe {
        ffi::init();
        let len = der.len().min(c_long::MAX as usize) as c_long;
        let p8inf = cvt_p(
            ffi::d2i_PKCS8_PRIV_KEY_INFO(ptr::null_mut(), &mut der.as_ptr(), len),
        )?;
        let res = cvt_p(ffi::EVP_PKCS82PKEY(p8inf)).map(|p| PKey::from_ptr(p));
        ffi::PKCS8_PRIV_KEY_INFO_free(p8inf);
        res
    }
}



Checking unsafe block with 4 statements, large unsafe: false, function: private_key_from_pkcs8_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 4 statements, large unsafe: false, function: private_key_from_pkcs8_passphrase, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 2 statements, large unsafe: false, function: private_key_from_raw_bytes, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Checking unsafe block with 2 statements, large unsafe: false, function: public_key_from_raw_bytes, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new_id, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: encrypt_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify_recover_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: encrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 3 statements, large unsafe: true, function: verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Start Line: 241, End Line: 264
/// Verifies the signature of data using the public key.
///
/// Returns `Ok(true)` if the signature is valid, `Ok(false)` if the signature is invalid, and `Err` if an error
/// occurred.
///
/// # Note
///
/// This verifies the signature of the *raw* data. It is more common to compute and verify the signature of the
/// cryptographic hash of an arbitrary amount of data. The [`MdCtx`](crate::md_ctx::MdCtx) type can be used to do
/// that.
#[corresponds(EVP_PKEY_verify)]
#[inline]
pub fn verify(&mut self, data: &[u8], sig: &[u8]) -> Result<bool, ErrorStack> {
    unsafe {
        let r = ffi::EVP_PKEY_verify(
            self.as_ptr(),
            sig.as_ptr(),
            sig.len(),
            data.as_ptr(),
            data.len(),
        );
        if r <= 0 {
            let errors = ErrorStack::get();
            if !errors.errors().is_empty() {
                return Err(errors);
            }
        }
        Ok(r == 1)
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: verify_recover, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: decrypt_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sign_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: derive_set_peer, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: decrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sign, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: derive_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: keygen_init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_signature_md, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: rsa_padding, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_padding, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_pss_saltlen, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_mgf1_md, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_oaep_md, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 5 statements, large unsafe: true, function: set_rsa_oaep_label, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Start Line: 522, End Line: 542
/// Sets the RSA OAEP label.
///
/// This is only useful for RSA keys.
#[corresponds(EVP_PKEY_CTX_set0_rsa_oaep_label)]
#[cfg(any(ossl102, libressl310, boringssl))]
pub fn set_rsa_oaep_label(&mut self, label: &[u8]) -> Result<(), ErrorStack> {
    use crate::LenType;
    let len = LenType::try_from(label.len()).unwrap();
    unsafe {
        let p = ffi::OPENSSL_malloc(label.len() as _);
        ptr::copy_nonoverlapping(label.as_ptr(), p as *mut _, label.len());
        let r = cvt(
            ffi::EVP_PKEY_CTX_set0_rsa_oaep_label(self.as_ptr(), p as *mut _, len),
        );
        if r.is_err() {
            ffi::OPENSSL_free(p);
        }
        r?;
    }
    Ok(())
}



Checking unsafe block with 1 statements, large unsafe: false, function: set_keygen_cipher, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_keygen_mac_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_hkdf_md, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_hkdf_mode, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_hkdf_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_hkdf_salt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add_hkdf_info, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 1 statements, large unsafe: false, function: derive, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 3 statements, large unsafe: false, function: keygen, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 4 statements, large unsafe: false, function: set_nonce_type, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Checking unsafe block with 4 statements, large unsafe: false, function: nonce_type, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\pkey_ctx.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\provider.rs
Checking unsafe block with 2 statements, large unsafe: false, function: load, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\provider.rs
Checking unsafe block with 3 statements, large unsafe: false, function: try_load, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\provider.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_default_search_path, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\provider.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rand.rs
Checking unsafe block with 3 statements, large unsafe: false, function: rand_bytes, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rand.rs
Checking unsafe block with 3 statements, large unsafe: false, function: rand_priv_bytes, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rand.rs
Checking unsafe block with 1 statements, large unsafe: false, function: keep_random_devices_open, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rand.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: to_owned, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: private_decrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: private_encrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: d, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: p, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: q, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: dmp1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: dmq1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: iqmp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 2 statements, large unsafe: true, function: check_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Start Line: 238, End Line: 247
/// Validates RSA parameters for correctness
#[corresponds(RSA_check_key)]
#[allow(clippy::unnecessary_cast)]
pub fn check_key(&self) -> Result<bool, ErrorStack> {
    unsafe {
        let result = ffi::RSA_check_key(self.as_ptr()) as i32;
        if result == -1 { Err(ErrorStack::get()) } else { Ok(result == 1) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: public_decrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: public_encrypt, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: n, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: e, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 4 statements, large unsafe: false, function: from_public_components, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 4 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_factors, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_crt_params, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Checking unsafe block with 3 statements, large unsafe: false, function: generate_with_e, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\rsa.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sha.rs
Checking unsafe block with 3 statements, large unsafe: false, function: sha1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sha.rs
Checking unsafe block with 3 statements, large unsafe: false, function: sha224, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sha.rs
Checking unsafe block with 3 statements, large unsafe: false, function: sha256, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sha.rs
Checking unsafe block with 3 statements, large unsafe: false, function: sha384, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sha.rs
Checking unsafe block with 3 statements, large unsafe: false, function: sha512, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sha.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 1 statements, large unsafe: false, function: drop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 7 statements, large unsafe: true, function: new_intern, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Start Line: 164, End Line: 196
fn new_intern<'a, T>(
    type_: Option<MessageDigest>,
    pkey: &PKeyRef<T>,
) -> Result<Signer<'a>, ErrorStack>
where
    T: HasPrivate,
{
    unsafe {
        ffi::init();
        let ctx = cvt_p(EVP_MD_CTX_new())?;
        let mut pctx: *mut ffi::EVP_PKEY_CTX = ptr::null_mut();
        let r = ffi::EVP_DigestSignInit(
            ctx,
            &mut pctx,
            type_.map(|t| t.as_ptr()).unwrap_or(ptr::null()),
            ptr::null_mut(),
            pkey.as_ptr(),
        );
        if r != 1 {
            EVP_MD_CTX_free(ctx);
            return Err(ErrorStack::get());
        }
        assert!(! pctx.is_null());
        Ok(Signer {
            md_ctx: ctx,
            pctx,
            _p: PhantomData,
        })
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: rsa_padding, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_padding, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_pss_saltlen, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_rsa_mgf1_md, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 1 statements, large unsafe: false, function: update, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 3 statements, large unsafe: false, function: len_intern, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 3 statements, large unsafe: false, function: sign, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 3 statements, large unsafe: false, function: sign_oneshot, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 2 statements, large unsafe: false, function: verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Checking unsafe block with 2 statements, large unsafe: false, function: verify_oneshot, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\sign.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\srtp.rs
Checking unsafe block with 1 statements, large unsafe: false, function: id, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\srtp.rs
Checking unsafe block with 1 statements, large unsafe: false, function: name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\srtp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\bio.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Checking unsafe block with 5 statements, large unsafe: true, function: raw_verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Found function with unsafe block in raw_verify:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Start Line: 37, End Line: 57
pub extern "C" fn raw_verify<F>(
    preverify_ok: c_int,
    x509_ctx: *mut ffi::X509_STORE_CTX,
) -> c_int
where
    F: Fn(bool, &mut X509StoreContextRef) -> bool + 'static + Sync + Send,
{
    unsafe {
        let ctx = X509StoreContextRef::from_ptr_mut(x509_ctx);
        let ssl_idx = X509StoreContext::ssl_idx()
            .expect("BUG: store context ssl index missing");
        let verify_idx = SslContext::cached_ex_index::<F>();
        let verify = ctx
            .ex_data(ssl_idx)
            .expect("BUG: store context missing ssl")
            .ssl_context()
            .ex_data(verify_idx)
            .expect("BUG: verify callback missing") as *const F;
        (*verify)(preverify_ok != 0, ctx) as c_int
    }
}



Checking unsafe block with 7 statements, large unsafe: true, function: raw_client_psk, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Found function with unsafe block in raw_client_psk:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Start Line: 60, End Line: 99
#[cfg(not(osslconf = "OPENSSL_NO_PSK"))]
pub extern "C" fn raw_client_psk<F>(
    ssl: *mut ffi::SSL,
    hint: *const c_char,
    identity: *mut c_char,
    max_identity_len: c_uint,
    psk: *mut c_uchar,
    max_psk_len: c_uint,
) -> c_uint
where
    F: Fn(&mut SslRef, Option<&[u8]>, &mut [u8], &mut [u8]) -> Result<usize, ErrorStack>
        + 'static + Sync + Send,
{
    unsafe {
        let ssl = SslRef::from_ptr_mut(ssl);
        let callback_idx = SslContext::cached_ex_index::<F>();
        let callback = ssl
            .ssl_context()
            .ex_data(callback_idx)
            .expect("BUG: psk callback missing") as *const F;
        let hint = if !hint.is_null() {
            Some(CStr::from_ptr(hint).to_bytes())
        } else {
            None
        };
        let identity_sl = slice::from_raw_parts_mut(
            identity as *mut u8,
            max_identity_len as usize,
        );
        #[allow(clippy::unnecessary_cast)]
        let psk_sl = slice::from_raw_parts_mut(psk as *mut u8, max_psk_len as usize);
        match (*callback)(ssl, hint, identity_sl, psk_sl) {
            Ok(psk_len) => psk_len as u32,
            Err(e) => {
                e.put();
                0
            }
        }
    }
}



Checking unsafe block with 6 statements, large unsafe: true, function: raw_server_psk, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Found function with unsafe block in raw_server_psk:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Start Line: 102, End Line: 138
#[cfg(not(osslconf = "OPENSSL_NO_PSK"))]
pub extern "C" fn raw_server_psk<F>(
    ssl: *mut ffi::SSL,
    identity: *const c_char,
    psk: *mut c_uchar,
    max_psk_len: c_uint,
) -> c_uint
where
    F: Fn(&mut SslRef, Option<&[u8]>, &mut [u8]) -> Result<usize, ErrorStack> + 'static
        + Sync + Send,
{
    unsafe {
        let ssl = SslRef::from_ptr_mut(ssl);
        let callback_idx = SslContext::cached_ex_index::<F>();
        let callback = ssl
            .ssl_context()
            .ex_data(callback_idx)
            .expect("BUG: psk callback missing") as *const F;
        let identity = if identity.is_null() {
            None
        } else {
            Some(CStr::from_ptr(identity).to_bytes())
        };
        #[allow(clippy::unnecessary_cast)]
        let psk_sl = slice::from_raw_parts_mut(psk as *mut u8, max_psk_len as usize);
        match (*callback)(ssl, identity, psk_sl) {
            Ok(psk_len) => psk_len as u32,
            Err(e) => {
                e.put();
                0
            }
        }
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: ssl_raw_verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Found function with unsafe block in ssl_raw_verify:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Start Line: 140, End Line: 161
pub extern "C" fn ssl_raw_verify<F>(
    preverify_ok: c_int,
    x509_ctx: *mut ffi::X509_STORE_CTX,
) -> c_int
where
    F: Fn(bool, &mut X509StoreContextRef) -> bool + 'static + Sync + Send,
{
    unsafe {
        let ctx = X509StoreContextRef::from_ptr_mut(x509_ctx);
        let ssl_idx = X509StoreContext::ssl_idx()
            .expect("BUG: store context ssl index missing");
        let callback_idx = Ssl::cached_ex_index::<Arc<F>>();
        let callback = ctx
            .ex_data(ssl_idx)
            .expect("BUG: store context missing ssl")
            .ex_data(callback_idx)
            .expect("BUG: ssl verify callback missing")
            .clone();
        callback(preverify_ok != 0, ctx) as c_int
    }
}



Checking unsafe block with 6 statements, large unsafe: true, function: raw_sni, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Found function with unsafe block in raw_sni:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Start Line: 163, End Line: 179
pub extern "C" fn raw_sni<F>(
    ssl: *mut ffi::SSL,
    al: *mut c_int,
    arg: *mut c_void,
) -> c_int
where
    F: Fn(&mut SslRef, &mut SslAlert) -> Result<(), SniError> + 'static + Sync + Send,
{
    unsafe {
        let ssl = SslRef::from_ptr_mut(ssl);
        let callback = arg as *const F;
        let mut alert = SslAlert(*al);
        let r = (*callback)(ssl, &mut alert);
        *al = alert.0;
        match r {
            Ok(()) => ffi::SSL_TLSEXT_ERR_OK,
            Err(e) => e.0,
        }
    }
}



Checking unsafe block with 4 statements, large unsafe: false, function: raw_alpn_select, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Checking unsafe block with 4 statements, large unsafe: false, function: raw_cookie_generate, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Checking unsafe block with 4 statements, large unsafe: false, function: raw_cookie_verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Checking unsafe block with 5 statements, large unsafe: true, function: raw_custom_ext_add, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Found function with unsafe block in raw_custom_ext_add:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Start Line: 563, End Line: 619
#[cfg(ossl111)]
pub extern "C" fn raw_custom_ext_add<F, T>(
    ssl: *mut ffi::SSL,
    _: c_uint,
    context: c_uint,
    out: *mut *const c_uchar,
    outlen: *mut size_t,
    x: *mut ffi::X509,
    chainidx: size_t,
    al: *mut c_int,
    _: *mut c_void,
) -> c_int
where
    F: Fn(
            &mut SslRef,
            ExtensionContext,
            Option<(usize, &X509Ref)>,
        ) -> Result<Option<T>, SslAlert> + 'static + Sync + Send,
    T: AsRef<[u8]> + 'static + Sync + Send,
{
    unsafe {
        let ssl = SslRef::from_ptr_mut(ssl);
        let callback = ssl
            .ssl_context()
            .ex_data(SslContext::cached_ex_index::<F>())
            .expect("BUG: custom ext add callback missing") as *const F;
        let ectx = ExtensionContext::from_bits_truncate(context);
        let cert = if ectx.contains(ExtensionContext::TLS1_3_CERTIFICATE) {
            Some((chainidx, X509Ref::from_ptr(x)))
        } else {
            None
        };
        match (*callback)(ssl, ectx, cert) {
            Ok(None) => 0,
            Ok(Some(buf)) => {
                *outlen = buf.as_ref().len();
                *out = buf.as_ref().as_ptr();
                let idx = Ssl::cached_ex_index::<CustomExtAddState<T>>();
                let mut buf = Some(buf);
                let new = match ssl.ex_data_mut(idx) {
                    Some(state) => {
                        state.0 = buf.take();
                        false
                    }
                    None => true,
                };
                if new {
                    ssl.set_ex_data(idx, CustomExtAddState(buf));
                }
                1
            }
            Err(alert) => {
                *al = alert.0;
                -1
            }
        }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: raw_custom_ext_free, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Found function with unsafe block in raw_custom_ext_free:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Start Line: 622, End Line: 638
#[cfg(ossl111)]
pub extern "C" fn raw_custom_ext_free<T>(
    ssl: *mut ffi::SSL,
    _: c_uint,
    _: c_uint,
    _: *const c_uchar,
    _: *mut c_void,
)
where
    T: 'static + Sync + Send,
{
    unsafe {
        let ssl = SslRef::from_ptr_mut(ssl);
        let idx = Ssl::cached_ex_index::<CustomExtAddState<T>>();
        if let Some(state) = ssl.ex_data_mut(idx) {
            state.0 = None;
        }
    }
}



Checking unsafe block with 6 statements, large unsafe: true, function: raw_custom_ext_parse, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Found function with unsafe block in raw_custom_ext_parse:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\callbacks.rs
Start Line: 641, End Line: 680
#[cfg(ossl111)]
pub extern "C" fn raw_custom_ext_parse<F>(
    ssl: *mut ffi::SSL,
    _: c_uint,
    context: c_uint,
    input: *const c_uchar,
    inlen: size_t,
    x: *mut ffi::X509,
    chainidx: size_t,
    al: *mut c_int,
    _: *mut c_void,
) -> c_int
where
    F: Fn(
            &mut SslRef,
            ExtensionContext,
            &[u8],
            Option<(usize, &X509Ref)>,
        ) -> Result<(), SslAlert> + 'static + Sync + Send,
{
    unsafe {
        let ssl = SslRef::from_ptr_mut(ssl);
        let callback = ssl
            .ssl_context()
            .ex_data(SslContext::cached_ex_index::<F>())
            .expect("BUG: custom ext parse callback missing") as *const F;
        let ectx = ExtensionContext::from_bits_truncate(context);
        #[allow(clippy::unnecessary_cast)]
        let slice = slice::from_raw_parts(input as *const u8, inlen);
        let cert = if ectx.contains(ExtensionContext::TLS1_3_CERTIFICATE) {
            Some((chainidx, X509Ref::from_ptr(x)))
        } else {
            None
        };
        match (*callback)(ssl, ectx, slice, cert) {
            Ok(()) => 1,
            Err(alert) => {
                *al = alert.0;
                0
            }
        }
    }
}



Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\connector.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\error.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 4 statements, large unsafe: false, function: cipher_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: tls, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: dtls, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: tls_client, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: tls_server, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 4 statements, large unsafe: true, function: select_next_proto, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Found function with unsafe block in select_next_proto:
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 698, End Line: 716
/// A standard implementation of protocol selection for Application Layer Protocol Negotiation
/// (ALPN).
///
/// `server` should contain the server's list of supported protocols and `client` the client's. They
/// must both be in the ALPN wire format. See the documentation for
/// [`SslContextBuilder::set_alpn_protos`] for details.
///
/// It will select the first protocol supported by the server which is also supported by the client.
///
/// [`SslContextBuilder::set_alpn_protos`]: struct.SslContextBuilder.html#method.set_alpn_protos
#[corresponds(SSL_select_next_proto)]
pub fn select_next_proto<'a>(server: &[u8], client: &'a [u8]) -> Option<&'a [u8]> {
    unsafe {
        let mut out = ptr::null_mut();
        let mut outlen = 0;
        let r = ffi::SSL_select_next_proto(
            &mut out,
            &mut outlen,
            server.as_ptr(),
            server.len() as c_uint,
            client.as_ptr(),
            client.len() as c_uint,
        );
        if r == ffi::OPENSSL_NPN_NEGOTIATED {
            Some(slice::from_raw_parts(out as *const u8, outlen as usize))
        } else {
            None
        }
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_verify_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 4 statements, large unsafe: false, function: set_servername_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_verify_depth, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 4 statements, large unsafe: false, function: set_verify_cert_store, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_cert_store, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_read_ahead, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_mode, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_tmp_dh, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: set_tmp_dh_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_tmp_ecdh, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_tmp_ecdh_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_default_verify_paths, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_ca_file, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_client_ca_list, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add_client_ca, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_session_id_context, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_certificate_file, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_certificate_chain_file, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_certificate, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: add_extra_chain_cert, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_private_key_file, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_private_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_cipher_list, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_ciphersuites, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_ecdh_auto, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_options, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: options, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: clear_options, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_min_proto_version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_max_proto_version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: min_proto_version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 1189, End Line: 1198
/// Gets the minimum supported protocol version.
///
/// A value of `None` indicates that all versions down to the lowest version supported by
/// OpenSSL are enabled.
///
/// Requires OpenSSL 1.1.0g or LibreSSL 2.7.0 or newer.
#[corresponds(SSL_CTX_get_min_proto_version)]
#[cfg(any(ossl110g, libressl270))]
pub fn min_proto_version(&mut self) -> Option<SslVersion> {
    unsafe {
        let r = ffi::SSL_CTX_get_min_proto_version(self.as_ptr());
        if r == 0 { None } else { Some(SslVersion(r)) }
    }
}



Checking unsafe block with 2 statements, large unsafe: true, function: max_proto_version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 1208, End Line: 1217
/// Gets the maximum supported protocol version.
///
/// A value of `None` indicates that all versions up to the highest version supported by
/// OpenSSL are enabled.
///
/// Requires OpenSSL 1.1.0g or LibreSSL 2.7.0 or newer.
#[corresponds(SSL_CTX_get_max_proto_version)]
#[cfg(any(ossl110g, libressl270))]
pub fn max_proto_version(&mut self) -> Option<SslVersion> {
    unsafe {
        let r = ffi::SSL_CTX_get_max_proto_version(self.as_ptr());
        if r == 0 { None } else { Some(SslVersion(r)) }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: set_alpn_protos, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 1229, End Line: 1244
/// Sets the protocols to sent to the server for Application Layer Protocol Negotiation (ALPN).
///
/// The input must be in ALPN "wire format". It consists of a sequence of supported protocol
/// names prefixed by their byte length. For example, the protocol list consisting of `spdy/1`
/// and `http/1.1` is encoded as `b"\x06spdy/1\x08http/1.1"`. The protocols are ordered by
/// preference.
///
/// Requires BoringSSL or OpenSSL 1.0.2 or LibreSSL 2.6.1 or newer.
#[corresponds(SSL_CTX_set_alpn_protos)]
#[cfg(any(ossl102, libressl261, boringssl))]
pub fn set_alpn_protos(&mut self, protocols: &[u8]) -> Result<(), ErrorStack> {
    unsafe {
        assert!(protocols.len() <= c_uint::MAX as usize);
        let r = ffi::SSL_CTX_set_alpn_protos(
            self.as_ptr(),
            protocols.as_ptr(),
            protocols.len() as _,
        );
        if r == 0 { Ok(()) } else { Err(ErrorStack::get()) }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: set_tlsext_use_srtp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 1248, End Line: 1260
/// Enables the DTLS extension "use_srtp" as defined in RFC5764.
#[corresponds(SSL_CTX_set_tlsext_use_srtp)]
pub fn set_tlsext_use_srtp(&mut self, protocols: &str) -> Result<(), ErrorStack> {
    unsafe {
        let cstr = CString::new(protocols).unwrap();
        let r = ffi::SSL_CTX_set_tlsext_use_srtp(self.as_ptr(), cstr.as_ptr());
        if r == 0 { Ok(()) } else { Err(ErrorStack::get()) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: set_alpn_select_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: check_private_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cert_store, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cert_store_mut, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify_param, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify_param_mut, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_status_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_psk_client_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_psk_server_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_new_session_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_remove_session_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_keylog_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_session_cache_mode, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_stateless_cookie_generate_cb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_stateless_cookie_verify_cb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_cookie_generate_cb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_cookie_verify_cb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: set_ex_data_inner, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: ex_data_mut, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 1594, End Line: 1603
fn ex_data_mut<T>(&mut self, index: Index<SslContext, T>) -> Option<&mut T> {
    unsafe {
        let data = ffi::SSL_CTX_get_ex_data(self.as_ptr(), index.as_raw());
        if data.is_null() { None } else { Some(&mut *data.cast()) }
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: add_custom_ext, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_max_early_data, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_client_hello_callback, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_session_cache_size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_sigalgs_list, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_groups_list, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_num_tickets, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_security_level, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: to_owned, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 4 statements, large unsafe: false, function: new_ex_index, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: cached_ex_index, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: certificate, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: private_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: extra_chain_certs, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: ex_data, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 1882, End Line: 1891
/// Returns a reference to the extra data at the specified index.
#[corresponds(SSL_CTX_get_ex_data)]
pub fn ex_data<T>(&self, index: Index<SslContext, T>) -> Option<&T> {
    unsafe {
        let data = ffi::SSL_CTX_get_ex_data(self.as_ptr(), index.as_raw());
        if data.is_null() { None } else { Some(&*(data as *const T)) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: max_early_data, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: session_cache_size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify_mode, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: num_tickets, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: security_level, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: deref, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: deref_mut, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: standard_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 2036, End Line: 2045
/// Returns the RFC-standard name of the cipher, if one exists.
///
/// Requires OpenSSL 1.1.1 or newer.
#[corresponds(SSL_CIPHER_standard_name)]
#[cfg(ossl111)]
pub fn standard_name(&self) -> Option<&'static str> {
    unsafe {
        let ptr = ffi::SSL_CIPHER_standard_name(self.as_ptr());
        if ptr.is_null() { None } else { Some(CStr::from_ptr(ptr).to_str().unwrap()) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: bits, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: description, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: handshake_digest, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 2088, End Line: 2097
/// Returns the handshake digest of the cipher.
///
/// Requires OpenSSL 1.1.1 or newer.
#[corresponds(SSL_CIPHER_get_handshake_digest)]
#[cfg(ossl111)]
pub fn handshake_digest(&self) -> Option<MessageDigest> {
    unsafe {
        let ptr = ffi::SSL_CIPHER_get_handshake_digest(self.as_ptr());
        if ptr.is_null() { None } else { Some(MessageDigest::from_ptr(ptr)) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: cipher_nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: id, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: master_key_len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: master_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: time, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: timeout, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: protocol_version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: get_raw_rbio, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: get_error, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_connect_state, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_accept_state, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: current_cipher, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: state_string, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: state_string_long, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_hostname, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: peer_certificate, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: peer_cert_chain, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: verified_chain, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: version2, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 2612, End Line: 2621
/// Returns the protocol version of the session.
#[corresponds(SSL_version)]
pub fn version2(&self) -> Option<SslVersion> {
    unsafe {
        let r = ffi::SSL_version(self.as_ptr());
        if r == 0 { None } else { Some(SslVersion(r)) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: version_str, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 4 statements, large unsafe: true, function: selected_alpn_protocol, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 2642, End Line: 2656
/// Returns the protocol selected via Application Layer Protocol Negotiation (ALPN).
///
/// The protocol's name is returned is an opaque sequence of bytes. It is up to the client
/// to interpret it.
///
/// Requires BoringSSL or OpenSSL 1.0.2 or LibreSSL 2.6.1 or newer.
#[corresponds(SSL_get0_alpn_selected)]
#[cfg(any(ossl102, libressl261, boringssl))]
pub fn selected_alpn_protocol(&self) -> Option<&[u8]> {
    unsafe {
        let mut data: *const c_uchar = ptr::null();
        let mut len: c_uint = 0;
        ffi::SSL_get0_alpn_selected(self.as_ptr(), &mut data, &mut len);
        if data.is_null() {
            None
        } else {
            Some(slice::from_raw_parts(data, len as usize))
        }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: srtp_profiles, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: selected_srtp_profile, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: pending, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: servername_raw, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 2742, End Line: 2751
/// Returns the servername sent by the client via Server Name Indication (SNI).
///
/// It is only useful on the server side.
///
/// # Note
///
/// Unlike `servername`, this method does not require the name be valid UTF-8.
#[corresponds(SSL_get_servername)]
pub fn servername_raw(&self, type_: NameType) -> Option<&[u8]> {
    unsafe {
        let name = ffi::SSL_get_servername(self.as_ptr(), type_.0);
        if name.is_null() {
            None
        } else {
            Some(CStr::from_ptr(name as *const _).to_bytes())
        }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: set_ssl_context, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: ssl_context, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: param_mut, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify_result, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: session, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: client_random, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: server_random, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: export_keying_material, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: export_keying_material_early, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: session_reused, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_status_type, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: extms_support, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 3 statements, large unsafe: true, function: ocsp_status, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 2923, End Line: 2934
/// Returns the server's OCSP response, if present.
#[corresponds(SSL_get_tlsext_status_ocsp_resp)]
#[cfg(not(boringssl))]
pub fn ocsp_status(&self) -> Option<&[u8]> {
    unsafe {
        let mut p = ptr::null_mut();
        let len = ffi::SSL_get_tlsext_status_ocsp_resp(self.as_ptr(), &mut p);
        if len < 0 {
            None
        } else {
            Some(slice::from_raw_parts(p as *const u8, len as usize))
        }
    }
}



Checking unsafe block with 4 statements, large unsafe: false, function: set_ocsp_status, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: is_server, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: finished, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: peer_finished, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: is_init_finished, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: client_hello_isv2, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: client_hello_legacy_version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 3077, End Line: 3086
/// Returns the legacy version field of the client's hello message.
///
/// This can only be used inside of the client hello callback. Otherwise, `None` is returned.
///
/// Requires OpenSSL 1.1.1 or newer.
#[corresponds(SSL_client_hello_get0_legacy_version)]
#[cfg(ossl111)]
pub fn client_hello_legacy_version(&self) -> Option<SslVersion> {
    unsafe {
        let version = ffi::SSL_client_hello_get0_legacy_version(self.as_ptr());
        if version == 0 { None } else { Some(SslVersion(version as c_int)) }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: client_hello_random, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 3095, End Line: 3105
/// Returns the random field of the client's hello message.
///
/// This can only be used inside of the client hello callback. Otherwise, `None` is returned.
///
/// Requires OpenSSL 1.1.1 or newer.
#[corresponds(SSL_client_hello_get0_random)]
#[cfg(ossl111)]
pub fn client_hello_random(&self) -> Option<&[u8]> {
    unsafe {
        let mut ptr = ptr::null();
        let len = ffi::SSL_client_hello_get0_random(self.as_ptr(), &mut ptr);
        if len == 0 { None } else { Some(slice::from_raw_parts(ptr, len)) }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: client_hello_session_id, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 3114, End Line: 3124
/// Returns the session ID field of the client's hello message.
///
/// This can only be used inside of the client hello callback. Otherwise, `None` is returned.
///
/// Requires OpenSSL 1.1.1 or newer.
#[corresponds(SSL_client_hello_get0_session_id)]
#[cfg(ossl111)]
pub fn client_hello_session_id(&self) -> Option<&[u8]> {
    unsafe {
        let mut ptr = ptr::null();
        let len = ffi::SSL_client_hello_get0_session_id(self.as_ptr(), &mut ptr);
        if len == 0 { None } else { Some(slice::from_raw_parts(ptr, len)) }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: client_hello_ciphers, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 3133, End Line: 3143
/// Returns the ciphers field of the client's hello message.
///
/// This can only be used inside of the client hello callback. Otherwise, `None` is returned.
///
/// Requires OpenSSL 1.1.1 or newer.
#[corresponds(SSL_client_hello_get0_ciphers)]
#[cfg(ossl111)]
pub fn client_hello_ciphers(&self) -> Option<&[u8]> {
    unsafe {
        let mut ptr = ptr::null();
        let len = ffi::SSL_client_hello_get0_ciphers(self.as_ptr(), &mut ptr);
        if len == 0 { None } else { Some(slice::from_raw_parts(ptr, len)) }
    }
}



Checking unsafe block with 6 statements, large unsafe: true, function: bytes_to_cipher_list, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 3151, End Line: 3178
/// Decodes a slice of wire-format cipher suite specification bytes. Unsupported cipher suites
/// are ignored.
///
/// Requires OpenSSL 1.1.1 or newer.
#[corresponds(SSL_bytes_to_cipher_list)]
#[cfg(ossl111)]
pub fn bytes_to_cipher_list(
    &self,
    bytes: &[u8],
    isv2format: bool,
) -> Result<CipherLists, ErrorStack> {
    unsafe {
        let ptr = bytes.as_ptr();
        let len = bytes.len();
        let mut sk = ptr::null_mut();
        let mut scsvs = ptr::null_mut();
        let res = ffi::SSL_bytes_to_cipher_list(
            self.as_ptr(),
            ptr,
            len,
            isv2format as c_int,
            &mut sk,
            &mut scsvs,
        );
        if res == 1 {
            Ok(CipherLists {
                suites: Stack::from_ptr(sk),
                signalling_suites: Stack::from_ptr(scsvs),
            })
        } else {
            Err(ErrorStack::get())
        }
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: client_hello_compression_methods, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 3187, End Line: 3197
/// Returns the compression methods field of the client's hello message.
///
/// This can only be used inside of the client hello callback. Otherwise, `None` is returned.
///
/// Requires OpenSSL 1.1.1 or newer.
#[corresponds(SSL_client_hello_get0_compression_methods)]
#[cfg(ossl111)]
pub fn client_hello_compression_methods(&self) -> Option<&[u8]> {
    unsafe {
        let mut ptr = ptr::null();
        let len = ffi::SSL_client_hello_get0_compression_methods(
            self.as_ptr(),
            &mut ptr,
        );
        if len == 0 { None } else { Some(slice::from_raw_parts(ptr, len)) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: set_mtu, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: psk_identity_hint, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 3210, End Line: 3219
/// Returns the PSK identity hint used during connection setup.
///
/// May return `None` if no PSK identity hint was used during the connection setup.
#[corresponds(SSL_get_psk_identity_hint)]
#[cfg(not(osslconf = "OPENSSL_NO_PSK"))]
pub fn psk_identity_hint(&self) -> Option<&[u8]> {
    unsafe {
        let ptr = ffi::SSL_get_psk_identity_hint(self.as_ptr());
        if ptr.is_null() { None } else { Some(CStr::from_ptr(ptr).to_bytes()) }
    }
}



Checking unsafe block with 2 statements, large unsafe: true, function: psk_identity, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Start Line: 3224, End Line: 3233
/// Returns the PSK identity used during connection setup.
#[corresponds(SSL_get_psk_identity)]
#[cfg(not(osslconf = "OPENSSL_NO_PSK"))]
pub fn psk_identity(&self) -> Option<&[u8]> {
    unsafe {
        let ptr = ffi::SSL_get_psk_identity(self.as_ptr());
        if ptr.is_null() { None } else { Some(CStr::from_ptr(ptr).to_bytes()) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: add_chain_cert, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_method, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: peer_tmp_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: tmp_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: drop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: read_early_data, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: write_early_data, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: do_handshake, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: stateless, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: ssl_read, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: shutdown, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: get_shutdown, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_shutdown, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: check_panic, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: get_bio_error, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: read, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_dtls_mtu_size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\test\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\ssl\test\server.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Checking unsafe block with 2 statements, large unsafe: true, function: drop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Start Line: 58, End Line: 63
fn drop(&mut self) {
    unsafe {
        while self.pop().is_some() {}
        OPENSSL_sk_free(self.0 as *mut _);
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Checking unsafe block with 1 statements, large unsafe: false, function: deref, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Checking unsafe block with 1 statements, large unsafe: false, function: deref_mut, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Checking unsafe block with 1 statements, large unsafe: false, function: next, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Checking unsafe block with 1 statements, large unsafe: false, function: next_back, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Checking unsafe block with 1 statements, large unsafe: false, function: len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Checking unsafe block with 2 statements, large unsafe: true, function: get, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Start Line: 220, End Line: 228
/// Returns a reference to the element at the given index in the
/// stack or `None` if the index is out of bounds
pub fn get(&self, idx: usize) -> Option<&T::Ref> {
    unsafe {
        if idx >= self.len() {
            return None;
        }
        Some(T::Ref::from_ptr(self._get(idx)))
    }
}



Checking unsafe block with 2 statements, large unsafe: true, function: get_mut, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Start Line: 232, End Line: 240
/// Returns a mutable reference to the element at the given index in the
/// stack or `None` if the index is out of bounds
pub fn get_mut(&mut self, idx: usize) -> Option<&mut T::Ref> {
    unsafe {
        if idx >= self.len() {
            return None;
        }
        Some(T::Ref::from_ptr_mut(self._get(idx)))
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: push, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Checking unsafe block with 2 statements, large unsafe: false, function: pop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\stack.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\string.rs
Checking unsafe block with 2 statements, large unsafe: false, function: deref, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\string.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_xts, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ctr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_cfb1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_cfb8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_gcm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ccm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_128_ocb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ctr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_cfb1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_cfb8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_gcm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ccm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_192_ocb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_xts, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ctr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_cfb1, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_cfb8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_gcm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ccm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: aes_256_ocb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bf_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bf_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bf_cfb64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: bf_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_cfb64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_cfb8, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: des_ede3_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: rc4, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_128_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_128_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_128_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_128_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_192_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_192_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_192_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_192_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_256_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_256_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_256_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: camellia_256_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cast5_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cast5_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cast5_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cast5_cfb64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: chacha20, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: chacha20_poly1305, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: idea_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: idea_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: idea_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: idea_cfb64, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seed_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seed_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seed_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: seed_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_ecb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_cbc, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_ctr, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_cfb128, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sm4_ofb, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: key_len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 2 statements, large unsafe: true, function: iv_len, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Start Line: 485, End Line: 494
/// Returns the length of the IV used with this cipher, or `None` if the
/// cipher does not use an IV.
#[allow(clippy::trivially_copy_pass_by_ref)]
pub fn iv_len(&self) -> Option<usize> {
    unsafe {
        let len = EVP_CIPHER_iv_length(self.0) as usize;
        if len == 0 { None } else { Some(len) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: block_size, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\symm.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\util.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\version.rs
Checking unsafe block with 1 statements, large unsafe: false, function: number, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\version.rs
Checking unsafe block with 1 statements, large unsafe: false, function: version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\version.rs
Checking unsafe block with 1 statements, large unsafe: false, function: c_flags, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\version.rs
Checking unsafe block with 1 statements, large unsafe: false, function: built_on, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\version.rs
Checking unsafe block with 1 statements, large unsafe: false, function: platform, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\version.rs
Checking unsafe block with 1 statements, large unsafe: false, function: dir, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\version.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\extension.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: ssl_idx, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: ex_data, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 95, End Line: 104
/// Returns application data pertaining to an `X509` store context.
#[corresponds(X509_STORE_CTX_get_ex_data)]
pub fn ex_data<T>(&self, index: Index<X509StoreContext, T>) -> Option<&T> {
    unsafe {
        let data = ffi::X509_STORE_CTX_get_ex_data(self.as_ptr(), index.as_raw());
        if data.is_null() { None } else { Some(&*(data as *const T)) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: error, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify_cert, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_error, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: current_cert, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: error_depth, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: chain, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 200, End Line: 210
/// Returns a reference to a complete valid `X509` certificate chain.
#[corresponds(X509_STORE_CTX_get0_chain)]
pub fn chain(&self) -> Option<&StackRef<X509>> {
    unsafe {
        let chain = X509_STORE_CTX_get0_chain(self.as_ptr());
        if chain.is_null() { None } else { Some(StackRef::from_ptr(chain)) }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: drop, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_not_after, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_not_before, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_serial_number, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_issuer_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_subject_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_pubkey, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 6 statements, large unsafe: true, function: x509v3_context, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 314, End Line: 343
/// Returns a context object which is needed to create certain X509 extension values.
///
/// Set `issuer` to `None` if the certificate will be self-signed.
#[corresponds(X509V3_set_ctx)]
pub fn x509v3_context<'a>(
    &'a self,
    issuer: Option<&'a X509Ref>,
    conf: Option<&'a ConfRef>,
) -> X509v3Context<'a> {
    unsafe {
        let mut ctx = mem::zeroed();
        let issuer = match issuer {
            Some(issuer) => issuer.as_ptr(),
            None => self.0.as_ptr(),
        };
        let subject = self.0.as_ptr();
        ffi::X509V3_set_ctx(
            &mut ctx,
            issuer,
            subject,
            ptr::null_mut(),
            ptr::null_mut(),
            0,
        );
        if let Some(conf) = conf {
            ffi::X509V3_set_nconf(&mut ctx, conf.as_ptr());
        }
        X509v3Context(ctx, PhantomData)
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: append_extension2, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: sign, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: subject_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: subject_name_hash, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: issuer_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: issuer_name_hash, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: subject_alt_names, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: crl_distribution_points, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: issuer_alt_names, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: authority_info, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: pathlen, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: subject_key_id, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: authority_key_id, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: authority_issuer, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: authority_serial, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: public_key, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 5 statements, large unsafe: true, function: digest, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 539, End Line: 556
/// Returns a digest of the DER representation of the certificate.
#[corresponds(X509_digest)]
pub fn digest(&self, hash_type: MessageDigest) -> Result<DigestBytes, ErrorStack> {
    unsafe {
        let mut digest = DigestBytes {
            buf: [0; ffi::EVP_MAX_MD_SIZE as usize],
            len: ffi::EVP_MAX_MD_SIZE as usize,
        };
        let mut len = ffi::EVP_MAX_MD_SIZE as c_uint;
        cvt(
            ffi::X509_digest(
                self.as_ptr(),
                hash_type.as_ptr(),
                digest.buf.as_mut_ptr() as *mut _,
                &mut len,
            ),
        )?;
        digest.len = len as usize;
        Ok(digest)
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: not_after, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: not_before, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: signature, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: signature_algorithm, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: ocsp_responders, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: issued, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: version, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: verify, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: serial_number, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: true, function: alias, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 658, End Line: 668
/// Returns this certificate's "alias". This field is populated by
/// OpenSSL in some situations -- specifically OpenSSL will store a
/// PKCS#12 `friendlyName` in this field. This is not a part of the X.509
/// certificate itself, OpenSSL merely attaches it to this structure in
/// memory.
#[corresponds(X509_alias_get0)]
pub fn alias(&self) -> Option<&[u8]> {
    unsafe {
        let mut len = 0;
        let ptr = ffi::X509_alias_get0(self.as_ptr(), &mut len);
        if ptr.is_null() { None } else { Some(slice::from_raw_parts(ptr, len as usize)) }
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: to_owned, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: cmp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 5 statements, large unsafe: true, function: stack_from_pem, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 766, End Line: 794
/// Deserializes a list of PEM-formatted certificates.
#[corresponds(PEM_read_bio_X509)]
pub fn stack_from_pem(pem: &[u8]) -> Result<Vec<X509>, ErrorStack> {
    unsafe {
        ffi::init();
        let bio = MemBioSlice::new(pem)?;
        let mut certs = vec![];
        loop {
            let r = ffi::PEM_read_bio_X509(
                bio.as_ptr(),
                ptr::null_mut(),
                None,
                ptr::null_mut(),
            );
            if r.is_null() {
                let e = ErrorStack::get();
                if let Some(err) = e.errors().last() {
                    if err.library_code() == ffi::ERR_LIB_PEM as libc::c_int
                        && err.reason_code() == ffi::PEM_R_NO_START_LINE as libc::c_int
                    {
                        break;
                    }
                }
                return Err(e);
            } else {
                certs.push(X509(r));
            }
        }
        Ok(certs)
    }
}



Checking unsafe block with 6 statements, large unsafe: true, function: new_nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 967, End Line: 999
/// Constructs an X509 extension value. See `man x509v3_config` for information on supported
/// extensions and their value formats.
///
/// Some extension types, such as `nid::SUBJECT_ALTERNATIVE_NAME`, require an `X509v3Context` to
/// be provided.
///
/// DO NOT CALL THIS WITH UNTRUSTED `value`: `value` is an OpenSSL
/// mini-language that can read arbitrary files.
///
/// See the extension module for builder types which will construct certain common extensions.
///
/// This function is deprecated, `X509Extension::new_from_der` or the
/// types in `x509::extension` should be used in its place.
#[deprecated(
    note = "Use x509::extension types or new_from_der instead",
    since = "0.10.51"
)]
pub fn new_nid(
    conf: Option<&ConfRef>,
    context: Option<&X509v3Context<'_>>,
    name: Nid,
    value: &str,
) -> Result<X509Extension, ErrorStack> {
    let value = CString::new(value).unwrap();
    let mut ctx;
    unsafe {
        ffi::init();
        let conf = conf.map_or(ptr::null_mut(), ConfRef::as_ptr);
        let context_ptr = match context {
            Some(c) => c.as_ptr(),
            None => {
                ctx = mem::zeroed();
                ffi::X509V3_set_ctx(
                    &mut ctx,
                    ptr::null_mut(),
                    ptr::null_mut(),
                    ptr::null_mut(),
                    ptr::null_mut(),
                    0,
                );
                &mut ctx
            }
        };
        let name = name.as_raw();
        let value = value.as_ptr() as *mut _;
        cvt_p(ffi::X509V3_EXT_nconf_nid(conf, context_ptr, name, value))
            .map(X509Extension)
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: new_from_der, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: append_entry, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: append_entry_by_text, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: append_entry_by_text_with_type, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: append_entry_by_nid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: append_entry_by_nid_with_type, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: load_client_ca_file, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: try_cmp, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: next, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: data, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: object, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add_extensions, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: extensions, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: revocation_date, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: extension, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: get_revoked, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 1868, End Line: 1877
/// Get the stack of revocation entries
pub fn get_revoked(&self) -> Option<&StackRef<X509Revoked>> {
    unsafe {
        let revoked = X509_CRL_get_REVOKED(self.as_ptr());
        if revoked.is_null() { None } else { Some(StackRef::from_ptr(revoked)) }
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: last_update, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: next_update, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: get_by_serial, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: get_by_cert, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: error_string, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new_email, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new_dns, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new_uri, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new_ip, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new_ip, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 7 statements, large unsafe: true, function: new_rid, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 2094, End Line: 2113
pub(crate) fn new_rid(oid: Asn1Object) -> Result<GeneralName, ErrorStack> {
    unsafe {
        ffi::init();
        let gn = cvt_p(ffi::GENERAL_NAME_new())?;
        (*gn).type_ = ffi::GEN_RID;
        #[cfg(boringssl)]
        {
            (*gn).d.registeredID = oid.as_ptr();
        }
        #[cfg(not(boringssl))]
        {
            (*gn).d = oid.as_ptr().cast();
        }
        mem::forget(oid);
        Ok(GeneralName::from_ptr(gn))
    }
}



Checking unsafe block with 7 statements, large unsafe: true, function: new_other_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 2115, End Line: 2141
pub(crate) fn new_other_name(
    oid: Asn1Object,
    value: &[u8],
) -> Result<GeneralName, ErrorStack> {
    unsafe {
        ffi::init();
        let typ = cvt_p(
            ffi::d2i_ASN1_TYPE(
                ptr::null_mut(),
                &mut value.as_ptr().cast(),
                value.len().try_into().unwrap(),
            ),
        )?;
        let gn = cvt_p(ffi::GENERAL_NAME_new())?;
        (*gn).type_ = ffi::GEN_OTHERNAME;
        if let Err(e) = cvt(
            ffi::GENERAL_NAME_set0_othername(gn, oid.as_ptr().cast(), typ),
        ) {
            ffi::GENERAL_NAME_free(gn);
            return Err(e);
        }
        mem::forget(oid);
        Ok(GeneralName::from_ptr(gn))
    }
}



Checking unsafe block with 7 statements, large unsafe: true, function: ia5_string, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 2145, End Line: 2166
fn ia5_string(&self, ffi_type: c_int) -> Option<&str> {
    unsafe {
        if (*self.as_ptr()).type_ != ffi_type {
            return None;
        }
        #[cfg(boringssl)]
        let d = (*self.as_ptr()).d.ptr;
        #[cfg(not(boringssl))]
        let d = (*self.as_ptr()).d;
        let ptr = ASN1_STRING_get0_data(d as *mut _);
        let len = ffi::ASN1_STRING_length(d as *mut _);
        #[allow(clippy::unnecessary_cast)]
        let slice = slice::from_raw_parts(ptr as *const u8, len as usize);
        str::from_utf8(slice).ok()
    }
}



Checking unsafe block with 4 statements, large unsafe: true, function: directory_name, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 2174, End Line: 2187
/// Returns the contents of this `GeneralName` if it is a `directoryName`.
pub fn directory_name(&self) -> Option<&X509NameRef> {
    unsafe {
        if (*self.as_ptr()).type_ != ffi::GEN_DIRNAME {
            return None;
        }
        #[cfg(boringssl)]
        let d = (*self.as_ptr()).d.ptr;
        #[cfg(not(boringssl))]
        let d = (*self.as_ptr()).d;
        Some(X509NameRef::from_const_ptr(d as *const _))
    }
}



Checking unsafe block with 6 statements, large unsafe: true, function: ipaddress, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 2200, End Line: 2216
/// Returns the contents of this `GeneralName` if it is an `iPAddress`.
pub fn ipaddress(&self) -> Option<&[u8]> {
    unsafe {
        if (*self.as_ptr()).type_ != ffi::GEN_IPADD {
            return None;
        }
        #[cfg(boringssl)]
        let d: *const ffi::ASN1_STRING = std::mem::transmute((*self.as_ptr()).d);
        #[cfg(not(boringssl))]
        let d = (*self.as_ptr()).d;
        let ptr = ASN1_STRING_get0_data(d as *mut _);
        let len = ffi::ASN1_STRING_length(d as *mut _);
        #[allow(clippy::unnecessary_cast)]
        Some(slice::from_raw_parts(ptr as *const u8, len as usize))
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: distpoint, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: true, function: fullname, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
File: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Start Line: 2274, End Line: 2281
/// Returns the contents of this DistPointName if it is a fullname.
pub fn fullname(&self) -> Option<&StackRef<GeneralName>> {
    unsafe {
        if (*self.as_ptr()).type_ != 0 {
            return None;
        }
        StackRef::from_const_ptr_opt((*self.as_ptr()).name.fullname)
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: method, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 1 statements, large unsafe: false, function: location, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: x509, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 3 statements, large unsafe: false, function: get_by_sname, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: from_idx, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Checking unsafe block with 2 statements, large unsafe: false, function: purpose, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add_cert, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_default_paths, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add_lookup, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add_lookup, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_flags, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_purpose, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_param, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: hash_dir, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: add_dir, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: file, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: load_cert_file, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: load_crl_file, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: objects, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Checking unsafe block with 1 statements, large unsafe: false, function: all_certificates, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\store.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\tests.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 2 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_hostflags, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_flags, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: clear_flags, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: flags, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_host, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 2 statements, large unsafe: false, function: set_email, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 3 statements, large unsafe: false, function: set_ip, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_time, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_depth, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_auth_level, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: auth_level, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Checking unsafe block with 1 statements, large unsafe: false, function: set_purpose, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl\src\x509\verify.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-errors\build.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-errors\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-errors\tests\test.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-macros\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\build\cfgs.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\build\find_normal.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\build\find_vendored.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\build\main.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\build\run_bindgen.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\aes.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\asn1.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\bio.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\bn.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\cms.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\crypto.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\dtls1.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\ec.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\err.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\evp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\aes.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\asn1.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\bio.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\bn.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\cmac.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\cms.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\conf.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\crypto.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\dh.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\dsa.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\ec.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\err.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\evp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\hmac.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\kdf.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\mod.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\object.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\ocsp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\params.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\pem.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\pkcs12.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\pkcs7.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\poly1305.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\provider.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\rand.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\rsa.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\safestack.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\sha.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\srtp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\ssl.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\stack.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\tls1.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\x509.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\x509v3.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\handwritten\x509_vfy.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: init, file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\lib.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\macros.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\obj_mac.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\ocsp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\pem.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\pkcs7.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\rsa.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\sha.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\srtp.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\ssl.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\ssl3.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\tls1.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\types.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\x509.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\x509v3.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\openssl-sys\src\x509_vfy.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\systest\build.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-openssl-da7f26d59aaa74bb4c6eb9181807d6e56047df44\systest\src\main.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\benches\bench.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: next, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: next_back, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: new, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Unsafe block with set_len detected in function: from_vec, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 5 statements, large unsafe: true, function: from_vec, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 448, End Line: 470
/// Construct a new `SmallVec` from a `Vec<A::Item>`.
///
/// Elements will be copied to the inline buffer if vec.capacity() <= A::size().
///
/// ```rust
/// use smallvec::SmallVec;
///
/// let vec = vec![1, 2, 3, 4, 5];
/// let small_vec: SmallVec<[_; 3]> = SmallVec::from_vec(vec);
///
/// assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);
/// ```
#[inline]
pub fn from_vec(mut vec: Vec<A::Item>) -> SmallVec<A> {
    if vec.capacity() <= A::size() {
        unsafe {
            let mut data = SmallVecData::<A>::from_inline(mem::uninitialized());
            let len = vec.len();
            vec.set_len(0);
            ptr::copy_nonoverlapping(vec.as_ptr(), data.inline_mut().ptr_mut(), len);
            SmallVec { capacity: len, data }
        }
    } else {
        let (ptr, cap, len) = (vec.as_mut_ptr(), vec.capacity(), vec.len());
        mem::forget(vec);
        SmallVec {
            capacity: cap,
            data: SmallVecData::from_heap(ptr, len),
        }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: from_buf_and_len, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 1 statements, large unsafe: true, function: triple, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 569, End Line: 578
/// Returns a tuple with (data ptr, len, capacity)
/// Useful to get all SmallVec properties with a single check of the current storage variant.
#[inline]
fn triple(&self) -> (*const A::Item, usize, usize) {
    unsafe {
        if self.spilled() {
            let (ptr, len) = self.data.heap();
            (ptr, len, self.capacity)
        } else {
            (self.data.inline().ptr(), self.capacity, A::size())
        }
    }
}



Checking unsafe block with 1 statements, large unsafe: true, function: triple_mut, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 582, End Line: 591
/// Returns a tuple with (data ptr, len ptr, capacity)
#[inline]
fn triple_mut(&mut self) -> (*mut A::Item, &mut usize, usize) {
    unsafe {
        if self.spilled() {
            let &mut (ptr, ref mut len_ptr) = self.data.heap_mut();
            (ptr, len_ptr, self.capacity)
        } else {
            (self.data.inline_mut().ptr_mut(), &mut self.capacity, A::size())
        }
    }
}



Unsafe block with set_len detected in function: drain, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 5 statements, large unsafe: true, function: drain, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 600, End Line: 613
/// Empty the vector and return an iterator over its former contents.
pub fn drain(&mut self) -> Drain<A::Item> {
    unsafe {
        let ptr = self.as_mut_ptr();
        let current_len = self.len();
        self.set_len(0);
        let slice = slice::from_raw_parts_mut(ptr, current_len);
        Drain { iter: slice.iter_mut() }
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: pop, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 631, End Line: 641
/// Remove an item from the end of the vector and return it, or None if empty.
#[inline]
pub fn pop(&mut self) -> Option<A::Item> {
    unsafe {
        let (ptr, len_ptr, _) = self.triple_mut();
        if *len_ptr == 0 {
            return None;
        }
        let last_index = *len_ptr - 1;
        *len_ptr = last_index;
        Some(ptr::read(ptr.offset(last_index as isize)))
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: grow, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 646, End Line: 670
/// Re-allocate to set the capacity to `max(new_cap, inline_size())`.
///
/// Panics if `new_cap` is less than the vector's length.
pub fn grow(&mut self, new_cap: usize) {
    unsafe {
        let (ptr, &mut len, cap) = self.triple_mut();
        let unspilled = !self.spilled();
        assert!(new_cap >= len);
        if new_cap <= self.inline_size() {
            if unspilled {
                return;
            }
            self.data = SmallVecData::from_inline(mem::uninitialized());
            ptr::copy_nonoverlapping(ptr, self.data.inline_mut().ptr_mut(), len);
        } else if new_cap != cap {
            let mut vec = Vec::with_capacity(new_cap);
            let new_alloc = vec.as_mut_ptr();
            mem::forget(vec);
            ptr::copy_nonoverlapping(ptr, new_alloc, len);
            self.data = SmallVecData::from_heap(new_alloc, len);
            self.capacity = new_cap;
            if unspilled {
                return;
            }
        }
        deallocate(ptr, cap);
    }
}



Checking unsafe block with 5 statements, large unsafe: true, function: shrink_to_fit, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 710, End Line: 726
/// Shrink the capacity of the vector as much as possible.
///
/// When possible, this will move data from an external heap buffer to the vector's inline
/// storage.
pub fn shrink_to_fit(&mut self) {
    if !self.spilled() {
        return;
    }
    let len = self.len();
    if self.inline_size() >= len {
        unsafe {
            let (ptr, len) = self.data.heap();
            self.data = SmallVecData::from_inline(mem::uninitialized());
            ptr::copy_nonoverlapping(ptr, self.data.inline_mut().ptr_mut(), len);
            deallocate(ptr, self.capacity);
            self.capacity = len;
        }
    } else if self.capacity() > len {
        self.grow(len);
    }
}



Checking unsafe block with 2 statements, large unsafe: true, function: truncate, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 735, End Line: 744
/// Shorten the vector, keeping the first `len` elements and dropping the rest.
///
/// If `len` is greater than or equal to the vector's current length, this has no
/// effect.
///
/// This does not re-allocate.  If you want the vector's capacity to shrink, call
/// `shrink_to_fit` after truncating.
pub fn truncate(&mut self, len: usize) {
    unsafe {
        let (ptr, len_ptr, _) = self.triple_mut();
        while len < *len_ptr {
            let last_index = *len_ptr - 1;
            *len_ptr = last_index;
            ptr::drop_in_place(ptr.offset(last_index as isize));
        }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: swap_remove, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 8 statements, large unsafe: true, function: remove, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 782, End Line: 793
/// Remove and return the element at position `index`, shifting all elements after it to the
/// left.
///
/// Panics if `index` is out of bounds.
pub fn remove(&mut self, index: usize) -> A::Item {
    unsafe {
        let (mut ptr, len_ptr, _) = self.triple_mut();
        let len = *len_ptr;
        assert!(index < len);
        *len_ptr = len - 1;
        ptr = ptr.offset(index as isize);
        let item = ptr::read(ptr);
        ptr::copy(ptr.offset(1), ptr, len - index - 1);
        item
    }
}



Checking unsafe block with 7 statements, large unsafe: true, function: insert, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 798, End Line: 810
/// Insert an element at position `index`, shifting all elements after it to the right.
///
/// Panics if `index` is out of bounds.
pub fn insert(&mut self, index: usize, element: A::Item) {
    self.reserve(1);
    unsafe {
        let (mut ptr, len_ptr, _) = self.triple_mut();
        let len = *len_ptr;
        assert!(index <= len);
        *len_ptr = len + 1;
        ptr = ptr.offset(index as isize);
        ptr::copy(ptr, ptr.offset(1), len - index);
        ptr::write(ptr, element);
    }
}



Unsafe block with set_len detected in function: insert_many, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 9 statements, large unsafe: true, function: insert_many, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 814, End Line: 856
/// Insert multiple elements at position `index`, shifting all following elements toward the
/// back.
pub fn insert_many<I: IntoIterator<Item = A::Item>>(
    &mut self,
    index: usize,
    iterable: I,
) {
    let iter = iterable.into_iter();
    if index == self.len() {
        return self.extend(iter);
    }
    let (lower_size_bound, _) = iter.size_hint();
    assert!(lower_size_bound <= std::isize::MAX as usize);
    assert!(index + lower_size_bound >= index);
    self.reserve(lower_size_bound);
    unsafe {
        let old_len = self.len();
        assert!(index <= old_len);
        let mut ptr = self.as_mut_ptr().offset(index as isize);
        ptr::copy(ptr, ptr.offset(lower_size_bound as isize), old_len - index);
        self.set_len(index);
        let mut num_added = 0;
        for element in iter {
            let mut cur = ptr.offset(num_added as isize);
            if num_added >= lower_size_bound {
                self.reserve(1);
                ptr = self.as_mut_ptr().offset(index as isize);
                cur = ptr.offset(num_added as isize);
                ptr::copy(cur, cur.offset(1), old_len - index);
            }
            ptr::write(cur, element);
            num_added += 1;
        }
        if num_added < lower_size_bound {
            ptr::copy(
                ptr.offset(lower_size_bound as isize),
                ptr.offset(num_added as isize),
                old_len - index,
            );
        }
        self.set_len(old_len + num_added);
    }
}



Checking unsafe block with 4 statements, large unsafe: false, function: into_vec, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 3 statements, large unsafe: false, function: into_inner, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 1 statements, large unsafe: true, function: dedup_by, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 913, End Line: 941
/// Removes consecutive duplicate elements using the given equality relation.
pub fn dedup_by<F>(&mut self, mut same_bucket: F)
where
    F: FnMut(&mut A::Item, &mut A::Item) -> bool,
{
    let len = self.len();
    if len <= 1 {
        return;
    }
    let ptr = self.as_mut_ptr();
    let mut w: usize = 1;
    unsafe {
        for r in 1..len {
            let p_r = ptr.offset(r as isize);
            let p_wm1 = ptr.offset((w - 1) as isize);
            if !same_bucket(&mut *p_r, &mut *p_wm1) {
                if r != w {
                    let p_w = p_wm1.offset(1);
                    mem::swap(&mut *p_r, &mut *p_w);
                }
                w += 1;
            }
        }
    }
    self.truncate(w);
}



Checking unsafe block with 3 statements, large unsafe: false, function: from_slice, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Unsafe block with set_len detected in function: insert_from_slice, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 5 statements, large unsafe: true, function: insert_from_slice, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 1062, End Line: 1075
/// Copy elements from a slice into the vector at position `index`, shifting any following
/// elements toward the back.
///
/// For slices of `Copy` types, this is more efficient than `insert`.
pub fn insert_from_slice(&mut self, index: usize, slice: &[A::Item]) {
    self.reserve(slice.len());
    let len = self.len();
    assert!(index <= len);
    unsafe {
        let slice_ptr = slice.as_ptr();
        let ptr = self.as_mut_ptr().offset(index as isize);
        ptr::copy(ptr, ptr.offset(slice.len() as isize), len - index);
        ptr::copy_nonoverlapping(slice_ptr, ptr, slice.len());
        self.set_len(len + slice.len());
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: from_elem, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 1111, End Line: 1127
/// Creates a `SmallVec` with `n` copies of `elem`.
/// ```
/// use smallvec::SmallVec;
///
/// let v = SmallVec::<[char; 128]>::from_elem('d', 2);
/// assert_eq!(v, SmallVec::from_buf(['d', 'd']));
/// ```
pub fn from_elem(elem: A::Item, n: usize) -> Self {
    if n > A::size() {
        vec![elem; n].into()
    } else {
        let mut v = SmallVec::<A>::new();
        unsafe {
            let (ptr, len_ptr, _) = v.triple_mut();
            let mut local_len = SetLenOnDrop::new(len_ptr);
            for i in 0..n as isize {
                ::std::ptr::write(ptr.offset(i), elem.clone());
                local_len.increment_len(1);
            }
        }
        v
    }
}



Checking unsafe block with 2 statements, large unsafe: false, function: deref, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 2 statements, large unsafe: false, function: deref_mut, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 3 statements, large unsafe: true, function: extend, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 1345, End Line: 1366
fn extend<I: IntoIterator<Item = A::Item>>(&mut self, iterable: I) {
    let mut iter = iterable.into_iter();
    let (lower_size_bound, _) = iter.size_hint();
    self.reserve(lower_size_bound);
    unsafe {
        let (ptr, len_ptr, cap) = self.triple_mut();
        let mut len = SetLenOnDrop::new(len_ptr);
        while len.get() < cap {
            if let Some(out) = iter.next() {
                ptr::write(ptr.offset(len.get() as isize), out);
                len.increment_len(1);
            } else {
                break;
            }
        }
    }
    for elem in iter {
        self.push(elem);
    }
}



Unsafe block with set_len detected in function: into_iter, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Checking unsafe block with 3 statements, large unsafe: true, function: into_iter, file: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-smallvec-19de50108d403efaa7cd979eac3bb97a4432fd4b\lib.rs
Start Line: 1513, End Line: 1524
fn into_iter(mut self) -> Self::IntoIter {
    unsafe {
        let len = self.len();
        self.set_len(0);
        IntoIter {
            data: self,
            current: 0,
            end: len,
        }
    }
}



Processing file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\build.rs
Processing file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: next, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: next_back, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_vec, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: from_buf_and_len, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Unsafe block with set_len detected in function: drain, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 3 statements, large unsafe: true, function: drain, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 431, End Line: 440
/// Empty the vector and return an iterator over its former contents.
pub fn drain(&mut self) -> Drain<A::Item> {
    unsafe {
        let slice = slice::from_raw_parts_mut(self.as_mut_ptr(), self.len());
        self.set_len(0);
        Drain { iter: slice.iter_mut() }
    }
}



Checking unsafe block with 1 statements, large unsafe: true, function: truncate, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 470, End Line: 477
/// Shorten the vector, keeping the first `len` elements and dropping the rest.
///
/// If `len` is greater than or equal to the vector's current length, this has no
/// effect.
/// `shrink_to_fit` after truncating.
pub fn truncate(&mut self, len: usize) {
    unsafe {
        while len < self.length {
            self.length -= 1;
            ptr::drop_in_place(self.as_mut_ptr().padd(self.length));
        }
    }
}



Checking unsafe block with 1 statements, large unsafe: false, function: swap_remove, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 5 statements, large unsafe: true, function: remove, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 517, End Line: 526
/// Remove and return the element at position `index`, shifting all elements after it to the
/// left.
///
/// Panics if `index` is out of bounds.
pub fn remove(&mut self, index: usize) -> A::Item {
    assert!(index < self.len());
    unsafe {
        self.length -= 1;
        let ptr = self.as_mut_ptr().padd(index);
        let item = ptr::read(ptr);
        ptr::copy(ptr.offset(1), ptr, self.length - index);
        item
    }
}



Checking unsafe block with 4 statements, large unsafe: false, function: insert, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Unsafe block with set_len detected in function: insert_many, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 9 statements, large unsafe: true, function: insert_many, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 543, End Line: 585
/// Insert multiple elements at position `index`, shifting all following elements toward the
/// back.
pub fn insert_many<I: iter::IntoIterator<Item = A::Item>>(
    &mut self,
    index: usize,
    iterable: I,
) {
    let iter = iterable.into_iter();
    if index == self.len() {
        return self.extend(iter);
    }
    let (lower_size_bound, _) = iter.size_hint();
    assert!(lower_size_bound <= std::isize::MAX as usize);
    assert!(index + lower_size_bound >= index);
    assert!(self.len() + lower_size_bound <= self.capacity());
    unsafe {
        let old_len = self.len();
        assert!(index <= old_len);
        let mut ptr = self.as_mut_ptr().padd(index);
        ptr::copy(ptr, ptr.padd(lower_size_bound), old_len - index);
        self.set_len(index);
        let mut num_added = 0;
        for element in iter {
            let mut cur = ptr.padd(num_added);
            if num_added >= lower_size_bound {
                assert!(self.len() + 1 <= self.capacity());
                ptr = self.as_mut_ptr().padd(index);
                cur = ptr.padd(num_added);
                ptr::copy(cur, cur.padd(1), old_len - index);
            }
            ptr::write(cur, element);
            num_added += 1;
        }
        if num_added < lower_size_bound {
            ptr::copy(ptr.padd(lower_size_bound), ptr.padd(num_added), old_len - index);
        }
        self.set_len(old_len + num_added);
    }
}



Checking unsafe block with 3 statements, large unsafe: false, function: into_inner, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 1 statements, large unsafe: true, function: dedup_by, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 629, End Line: 657
/// Removes consecutive duplicate elements using the given equality relation.
pub fn dedup_by<F>(&mut self, mut same_bucket: F)
where
    F: FnMut(&mut A::Item, &mut A::Item) -> bool,
{
    let len = self.len();
    if len <= 1 {
        return;
    }
    let ptr = self.as_mut_ptr();
    let mut w: usize = 1;
    unsafe {
        for r in 1..len {
            let p_r = ptr.offset(r as isize);
            let p_wm1 = ptr.offset((w - 1) as isize);
            if !same_bucket(&mut *p_r, &mut *p_wm1) {
                if r != w {
                    let p_w = p_wm1.offset(1);
                    mem::swap(&mut *p_r, &mut *p_w);
                }
                w += 1;
            }
        }
    }
    self.truncate(w);
}



Checking unsafe block with 3 statements, large unsafe: false, function: from_slice, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Unsafe block with set_len detected in function: insert_from_slice, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 6 statements, large unsafe: true, function: insert_from_slice, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 688, End Line: 698
/// Copy elements from a slice into the vector at position `index`, shifting any following
/// elements toward the back.
///
/// For slices of `Copy` types, this is more efficient than `insert`.
pub fn insert_from_slice(&mut self, index: usize, slice: &[A::Item]) {
    assert!(index <= self.len() && self.len() + slice.len() <= self.capacity());
    unsafe {
        let len = self.len();
        let slice_ptr = slice.as_ptr();
        let ptr = self.as_mut_ptr().padd(index);
        ptr::copy(ptr, ptr.padd(slice.len()), len - index);
        ptr::copy_nonoverlapping(slice_ptr, ptr, slice.len());
        self.set_len(len + slice.len());
    }
}



Checking unsafe block with 3 statements, large unsafe: true, function: from_elem, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 734, End Line: 746
/// Creates a `StackVec` with `n` copies of `elem`.
/// ```
/// use stackvector::StackVec;
///
/// let v = StackVec::<[char; 128]>::from_elem('d', 2);
/// assert_eq!(v, StackVec::from_buf(['d', 'd']));
/// ```
pub fn from_elem(elem: A::Item, n: usize) -> Self {
    assert!(n <= A::size());
    let mut v = StackVec::<A>::new();
    unsafe {
        let ptr = v.as_mut_ptr();
        let mut local_len = SetLenOnDrop::new(&mut v.length);
        for i in 0..n as isize {
            ptr::write(ptr.offset(i), elem.clone());
            local_len.increment_len(1);
        }
    }
    v
}



Checking unsafe block with 1 statements, large unsafe: false, function: deref, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 1 statements, large unsafe: false, function: deref_mut, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Unsafe block with set_len detected in function: extend, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 5 statements, large unsafe: true, function: extend, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 896, End Line: 920
fn extend<I: iter::IntoIterator<Item = A::Item>>(&mut self, iterable: I) {
    let mut iter = iterable.into_iter();
    let (lower_bound, upper_bound) = iter.size_hint();
    let upper_bound = upper_bound.expect("iterable must provide upper bound.");
    assert!(self.len() + upper_bound <= self.capacity());
    unsafe {
        let len = self.len();
        let ptr = self.as_mut_ptr().padd(len);
        let mut count = 0;
        while count < lower_bound {
            if let Some(out) = iter.next() {
                ptr::write(ptr.padd(count), out);
                count += 1;
            } else {
                break;
            }
        }
        self.set_len(len + count);
    }
    for elem in iter {
        self.push(elem);
    }
}



Unsafe block with set_len detected in function: into_iter, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Checking unsafe block with 3 statements, large unsafe: true, function: into_iter, file: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
File: overunsafe库\存在overunsafe的rust库\rust-stackvector-d0382d5ef903fc96bdcc08c02e36e6dd2eda11a5\src\lib.rs
Start Line: 1057, End Line: 1068
fn into_iter(mut self) -> Self::IntoIter {
    unsafe {
        let len = self.len();
        self.set_len(0);
        IntoIter {
            data: self,
            current: 0,
            end: len,
        }
    }
}




--- Summary ---
Total functions: 10132
Total unsafe blocks: 975
Total unsafe blocks without SAFETY comment: 947
Total Potential Overunsafe function: 122
Total Necessary Unsafe function: 844
Inner Unsafe function ratio: 9.62%
Inner Unsafe function Without //SAFETY ratio: 9.35%
Inner Unsafe function Without //SAFETY and total Inner Unsafe function ratio: 97.13%
Potential Overunsafe function ratio: 1.20%
Necessary Unsafe function ratio: 8.33%
