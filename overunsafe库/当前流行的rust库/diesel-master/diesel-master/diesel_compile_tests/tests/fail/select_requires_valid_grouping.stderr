error[E0271]: type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:85:53
   |
85 |     let source = users::table.group_by(users::name).select(users::id);
   |                                                     ^^^^^^ type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::No`
  --> tests/fail/select_requires_valid_grouping.rs:8:9
   |
8  |         name -> Text,
   |         ^^^^
note: required for `users::columns::id` to implement `ValidGrouping<users::columns::name>`
  --> tests/fail/select_requires_valid_grouping.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<FromClause<table>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<(name, hair_color) as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:88:10
   |
88 |         .select(users::id);
   |          ^^^^^^ expected `No`, found `Yes`
   |
note: required for `users::columns::id` to implement `ValidGrouping<(users::columns::name, users::columns::hair_color)>`
  --> tests/fail/select_requires_valid_grouping.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<FromClause<table>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:91:10
   |
91 |         .select((users::name, users::id));
   |          ^^^^^^ type mismatch resolving `<name as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::No`
  --> tests/fail/select_requires_valid_grouping.rs:8:9
   |
8  |         name -> Text,
   |         ^^^^
note: required for `users::columns::id` to implement `ValidGrouping<users::columns::name>`
  --> tests/fail/select_requires_valid_grouping.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 1 redundant requirement hidden
   = note: required for `(users::columns::name, users::columns::id)` to implement `ValidGrouping<users::columns::name>`
   = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<FromClause<table>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<(users::columns::name, users::columns::id)>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<(name, hair_color) as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:94:10
   |
94 |         .select(users::id);
   |          ^^^^^^ expected `No`, found `Yes`
   |
note: required for `users::columns::id` to implement `ValidGrouping<(users::columns::name, users::columns::hair_color)>`
  --> tests/fail/select_requires_valid_grouping.rs:7:9
   |
7  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<FromClause<table>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<(id, title) as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/select_requires_valid_grouping.rs:98:10
   |
98 |         .select((users::all_columns, posts::id));
   |          ^^^^^^ expected `No`, found `Yes`
   |
note: required for `posts::columns::id` to implement `ValidGrouping<(users::columns::id, posts::columns::title)>`
  --> tests/fail/select_requires_valid_grouping.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 1 redundant requirement hidden
   = note: required for `((users::columns::id, users::columns::name, users::columns::hair_color), posts::columns::id)` to implement `ValidGrouping<(users::columns::id, posts::columns::title)>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, Inner>, Grouped<...>>>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<((users::columns::id, users::columns::name, users::columns::hair_color), posts::columns::id)>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: the trait bound `users::columns::id: IsContainedInGroupBy<comments::columns::id>` is not satisfied
   --> tests/fail/select_requires_valid_grouping.rs:102:10
    |
102 |         .select((users::all_columns, posts::all_columns, comments::id));
    |          ^^^^^^ the trait `IsContainedInGroupBy<comments::columns::id>` is not implemented for `users::columns::id`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<posts::table, comments::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<comments::columns::post_id>, NullableExpression<posts::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<JoinOn<query_source::joins::Join<users::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<posts::table, comments::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<comments::columns::post_id>, NullableExpression<posts::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<(users::columns::id, posts::columns::id)>>: SelectDsl<_>`
    |
    = help: the following other types implement trait `IsContainedInGroupBy<T>`:
              <users::columns::id as IsContainedInGroupBy<posts::columns::id>>
              <users::columns::id as IsContainedInGroupBy<posts::columns::title>>
              <users::columns::id as IsContainedInGroupBy<posts::columns::user_id>>
              <users::columns::id as IsContainedInGroupBy<users::columns::hair_color>>
              <users::columns::id as IsContainedInGroupBy<users::columns::id>>
              <users::columns::id as IsContainedInGroupBy<users::columns::name>>
    = note: required for `(users::columns::id, posts::columns::id)` to implement `IsContainedInGroupBy<comments::columns::id>`
note: required for `comments::columns::id` to implement `ValidGrouping<(users::columns::id, posts::columns::id)>`
   --> tests/fail/select_requires_valid_grouping.rs:23:9
    |
23  |         id -> Integer,
    |         ^^
    = note: 2 redundant requirements hidden
    = note: required for `((id, name, hair_color), (id, title, user_id), id)` to implement `ValidGrouping<(users::columns::id, posts::columns::id)>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<...>, ...>, ...>>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<((users::columns::id, users::columns::name, users::columns::hair_color), (posts::columns::id, posts::columns::title, posts::columns::user_id), comments::columns::id)>`
    = note: consider using `--verbose` to print the full type name to the console
    = note: consider using `--verbose` to print the full type name to the console

error[E0277]: the trait bound `posts::columns::id: IsContainedInGroupBy<comments::columns::id>` is not satisfied
   --> tests/fail/select_requires_valid_grouping.rs:102:10
    |
102 |         .select((users::all_columns, posts::all_columns, comments::id));
    |          ^^^^^^ the trait `IsContainedInGroupBy<comments::columns::id>` is not implemented for `posts::columns::id`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<posts::table, comments::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<comments::columns::post_id>, NullableExpression<posts::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<JoinOn<query_source::joins::Join<users::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<posts::table, comments::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<comments::columns::post_id>, NullableExpression<posts::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<(users::columns::id, posts::columns::id)>>: SelectDsl<_>`
    |
    = help: the following other types implement trait `IsContainedInGroupBy<T>`:
              <posts::columns::id as IsContainedInGroupBy<posts::columns::id>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::title>>
              <posts::columns::id as IsContainedInGroupBy<posts::columns::user_id>>
              <posts::columns::id as IsContainedInGroupBy<users::columns::hair_color>>
              <posts::columns::id as IsContainedInGroupBy<users::columns::id>>
              <posts::columns::id as IsContainedInGroupBy<users::columns::name>>
    = note: required for `(posts::columns::id,)` to implement `IsContainedInGroupBy<comments::columns::id>`
    = note: 1 redundant requirement hidden
    = note: required for `(users::columns::id, posts::columns::id)` to implement `IsContainedInGroupBy<comments::columns::id>`
note: required for `comments::columns::id` to implement `ValidGrouping<(users::columns::id, posts::columns::id)>`
   --> tests/fail/select_requires_valid_grouping.rs:23:9
    |
23  |         id -> Integer,
    |         ^^
    = note: 2 redundant requirements hidden
    = note: required for `((id, name, hair_color), (id, title, user_id), id)` to implement `ValidGrouping<(users::columns::id, posts::columns::id)>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<...>, ...>, ...>>, ..., ..., ..., ..., ..., ...>` to implement `SelectDsl<((users::columns::id, users::columns::name, users::columns::hair_color), (posts::columns::id, posts::columns::title, posts::columns::user_id), comments::columns::id)>`
    = note: consider using `--verbose` to print the full type name to the console
    = note: consider using `--verbose` to print the full type name to the console
