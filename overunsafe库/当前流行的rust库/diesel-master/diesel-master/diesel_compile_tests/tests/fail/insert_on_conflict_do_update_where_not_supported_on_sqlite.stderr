error[E0277]: the trait bound `sqlite::backend::SqliteOnConflictClause: SupportsOnConflictClauseWhere` is not satisfied
  --> tests/fail/insert_on_conflict_do_update_where_not_supported_on_sqlite.rs:21:18
   |
21 |         .execute(&mut connection)
   |          ------- ^^^^^^^^^^^^^^^ the trait `SupportsOnConflictClauseWhere` is not implemented for `sqlite::backend::SqliteOnConflictClause`, which is required by `InsertStatement<users::table, diesel::query_builder::upsert::on_conflict_clause::OnConflictValues<diesel::query_builder::insert_statement::ValuesClause<ColumnInsertValue<columns::id, diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>>, users::table>, diesel::query_builder::upsert::on_conflict_target::ConflictTarget<columns::id>, diesel::query_builder::upsert::on_conflict_actions::DoUpdate<diesel::query_builder::update_statement::changeset::Assign<diesel::query_builder::update_statement::changeset::ColumnWrapperForUpdate<columns::id>, diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>>, users::table>, diesel::query_builder::where_clause::WhereClause<diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<columns::id, diesel::expression::bound::Bound<diesel::sql_types::Integer, i32>>>>>>: ExecuteDsl<_, _>`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the trait `SupportsOnConflictClauseWhere` is implemented for `pg::backend::PgOnConflictClause`
   = note: required for `OnConflictValues<ValuesClause<ColumnInsertValue<id, Bound<Integer, i32>>, table>, ..., ..., ...>` to implement `QueryFragment<Sqlite>`
   = note: 1 redundant requirement hidden
   = note: required for `InsertStatement<table, OnConflictValues<ValuesClause<ColumnInsertValue<id, ...>, ...>, ..., ..., ...>>` to implement `QueryFragment<Sqlite>`
   = note: required for `InsertStatement<table, OnConflictValues<ValuesClause<ColumnInsertValue<id, ...>, ...>, ..., ..., ...>>` to implement `ExecuteDsl<diesel::SqliteConnection, Sqlite>`
note: required by a bound in `diesel::RunQueryDsl::execute`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn execute(self, conn: &mut Conn) -> QueryResult<usize>
   |        ------- required by a bound in this associated function
...
   |         Self: methods::ExecuteDsl<Conn>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `RunQueryDsl::execute`
   = note: consider using `--verbose` to print the full type name to the console
   = note: consider using `--verbose` to print the full type name to the console
