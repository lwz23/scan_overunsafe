error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:40:18
   |
40 |     let _ = join.select(posts::title);
   |                  ^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 1 redundant requirement hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, LeftOuter>, Grouped<Eq<Nullable<user_id>, ...>>>>>` to implement `SelectDsl<posts::columns::title>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:40:18
   |
40 |     let _ = join.select(posts::title);
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::title as SelectableExpression<Only<posts::table>>>
             <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::title as SelectableExpression<posts::table>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, LeftOuter>, Grouped<Eq<Nullable<user_id>, ...>>>>>` to implement `SelectDsl<posts::columns::title>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:46:18
   |
46 |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 2 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, LeftOuter>, Grouped<Eq<Nullable<user_id>, ...>>>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:46:18
   |
46 |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::title as SelectableExpression<Only<posts::table>>>
             <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::title as SelectableExpression<posts::table>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: 2 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, table, LeftOuter>, Grouped<Eq<Nullable<user_id>, ...>>>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:48:31
   |
48 |     let _ = join.select(lower(posts::title.nullable()));
   |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
   |                         |
   |                         required by a bound introduced by this call
   |
   = note: expected struct `diesel::sql_types::Text`
              found struct `Nullable<diesel::sql_types::Text>`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:32:1
   |
32 | define_sql_function!(fn lower(x: Text) -> Text);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
   = note: this error originates in the macro `define_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:48:25
   |
48 |     let _ = join.select(lower(posts::title.nullable()));
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Nullable<Text>`, found `Text`
   |
   = note: expected struct `Nullable<diesel::sql_types::Text>`
              found struct `diesel::sql_types::Text`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:57:18
   |
57 |     let _ = join.select(posts::title);
   |                  ^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 3 redundant requirements hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<JoinOn<Join<table, table, LeftOuter>, Grouped<...>>, ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:57:18
   |
57 |     let _ = join.select(posts::title);
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::title as SelectableExpression<Only<posts::table>>>
             <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::title as SelectableExpression<posts::table>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: 3 redundant requirements hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<JoinOn<Join<table, table, LeftOuter>, Grouped<...>>, ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:63:18
   |
63 |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 4 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<JoinOn<Join<table, table, LeftOuter>, Grouped<...>>, ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:63:18
   |
63 |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::title as SelectableExpression<Only<posts::table>>>
             <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::title as SelectableExpression<posts::table>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: 4 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<JoinOn<Join<table, table, LeftOuter>, Grouped<...>>, ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:65:31
   |
65 |     let _ = join.select(lower(posts::title.nullable()));
   |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
   |                         |
   |                         required by a bound introduced by this call
   |
   = note: expected struct `diesel::sql_types::Text`
              found struct `Nullable<diesel::sql_types::Text>`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:32:1
   |
32 | define_sql_function!(fn lower(x: Text) -> Text);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
   = note: this error originates in the macro `define_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:65:25
   |
65 |     let _ = join.select(lower(posts::title.nullable()));
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Nullable<Text>`, found `Text`
   |
   = note: expected struct `Nullable<diesel::sql_types::Text>`
              found struct `diesel::sql_types::Text`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:74:18
   |
74 |     let _ = join.select(posts::title);
   |                  ^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 3 redundant requirements hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<JoinOn<Join<table, table, LeftOuter>, Grouped<...>>, ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:74:18
   |
74 |     let _ = join.select(posts::title);
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::title as SelectableExpression<Only<posts::table>>>
             <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::title as SelectableExpression<posts::table>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: 3 redundant requirements hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<JoinOn<Join<table, table, LeftOuter>, Grouped<...>>, ..., ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:80:18
   |
80 |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 4 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<JoinOn<Join<table, table, LeftOuter>, Grouped<...>>, ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `users::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:80:18
   |
80 |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
   |
   = note: `posts::columns::title` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::title as SelectableExpression<Only<posts::table>>>
             <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::title as SelectableExpression<posts::table>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: 4 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>, pets::table, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<JoinOn<Join<table, table, LeftOuter>, Grouped<...>>, ..., ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:82:31
   |
82 |     let _ = join.select(lower(posts::title.nullable()));
   |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
   |                         |
   |                         required by a bound introduced by this call
   |
   = note: expected struct `diesel::sql_types::Text`
              found struct `Nullable<diesel::sql_types::Text>`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:32:1
   |
32 | define_sql_function!(fn lower(x: Text) -> Text);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
   = note: this error originates in the macro `define_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:82:25
   |
82 |     let _ = join.select(lower(posts::title.nullable()));
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Nullable<Text>`, found `Text`
   |
   = note: expected struct `Nullable<diesel::sql_types::Text>`
              found struct `diesel::sql_types::Text`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`

error[E0271]: type mismatch resolving `<SelectStatement<FromClause<JoinOn<Join<table, table, LeftOuter>, Grouped<Eq<Nullable<user_id>, ...>>>>> as AppearsInFromClause<...>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:89:18
   |
89 |     let _ = join.select(posts::title);
   |                  ^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 1 redundant requirement hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<FromClause<JoinOn<..., ...>>>, ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `pets::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:89:18
   |
89 |     let _ = join.select(posts::title);
   |                  ^^^^^^ the trait `SelectableExpression<pets::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
   |
   = note: `posts::columns::title` is no valid selection for `pets::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::title as SelectableExpression<Only<posts::table>>>
             <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::title as SelectableExpression<posts::table>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<FromClause<JoinOn<..., ...>>>, ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<SelectStatement<FromClause<JoinOn<Join<table, table, LeftOuter>, Grouped<Eq<Nullable<user_id>, ...>>>>> as AppearsInFromClause<...>>::Count == Never`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:95:18
   |
95 |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ expected `Once`, found `Never`
   |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 2 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<FromClause<JoinOn<..., ...>>>, ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `pets::table`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:95:18
   |
95 |     let _ = join.select(lower(posts::title));
   |                  ^^^^^^ the trait `SelectableExpression<pets::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
   |
   = note: `posts::columns::title` is no valid selection for `pets::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::title as SelectableExpression<Only<posts::table>>>
             <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::title as SelectableExpression<posts::table>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>>`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
   |
16 |         title -> Text,
   |         ^^^^^
   = note: 2 redundant requirements hidden
   = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
   = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<FromClause<JoinOn<..., ...>>>, ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:97:31
   |
97 |     let _ = join.select(lower(posts::title.nullable()));
   |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
   |                         |
   |                         required by a bound introduced by this call
   |
   = note: expected struct `diesel::sql_types::Text`
              found struct `Nullable<diesel::sql_types::Text>`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:32:1
   |
32 | define_sql_function!(fn lower(x: Text) -> Text);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
   = note: this error originates in the macro `define_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
  --> tests/fail/right_side_of_left_join_requires_nullable.rs:97:25
   |
97 |     let _ = join.select(lower(posts::title.nullable()));
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Nullable<Text>`, found `Text`
   |
   = note: expected struct `Nullable<diesel::sql_types::Text>`
              found struct `diesel::sql_types::Text`
   = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:104:18
    |
104 |     let _ = join.select(posts::title);
    |                  ^^^^^^ expected `Once`, found `Never`
    |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: 4 redundant requirements hidden
    = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<FromClause<JoinOn<..., ...>>>, ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
    = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `users::table`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:104:18
    |
104 |     let _ = join.select(posts::title);
    |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
    |
    = note: `posts::columns::title` is no valid selection for `users::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<Only<posts::table>>>
              <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
              <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
              <posts::columns::title as SelectableExpression<posts::table>>
              <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: 4 redundant requirements hidden
    = note: required for `posts::columns::title` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<FromClause<JoinOn<..., ...>>>, ...>, ...>>>` to implement `SelectDsl<posts::columns::title>`
    = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Never`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:110:18
    |
110 |     let _ = join.select(lower(posts::title));
    |                  ^^^^^^ expected `Once`, found `Never`
    |
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: associated types for the current `impl` cannot be restricted in `where` clauses
    = note: 5 redundant requirements hidden
    = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<FromClause<JoinOn<..., ...>>>, ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
    = note: consider using `--verbose` to print the full type name to the console

error[E0277]: Cannot select `posts::columns::title` from `users::table`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:110:18
    |
110 |     let _ = join.select(lower(posts::title));
    |                  ^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::title`, which is required by `SelectStatement<FromClause<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>>: SelectDsl<_>`
    |
    = note: `posts::columns::title` is no valid selection for `users::table`
    = help: the following other types implement trait `SelectableExpression<QS>`:
              <posts::columns::title as SelectableExpression<JoinOn<Join, On>>>
              <posts::columns::title as SelectableExpression<Only<posts::table>>>
              <posts::columns::title as SelectableExpression<SelectStatement<FromClause<From>>>>
              <posts::columns::title as SelectableExpression<Tablesample<posts::table, TSM>>>
              <posts::columns::title as SelectableExpression<posts::table>>
              <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
              <posts::columns::title as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
note: required for `posts::columns::title` to implement `SelectableExpression<query_source::joins::Join<users::table, posts::table, LeftOuter>>`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:16:9
    |
16  |         title -> Text,
    |         ^^^^^
    = note: 5 redundant requirements hidden
    = note: required for `lower_utils::lower<posts::columns::title>` to implement `SelectableExpression<JoinOn<query_source::joins::Join<pets::table, SelectStatement<FromClause<JoinOn<query_source::joins::Join<users::table, posts::table, LeftOuter>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<posts::columns::user_id>, NullableExpression<users::columns::id>>>>>>, Inner>, diesel::expression::grouped::Grouped<diesel::expression::operators::Eq<NullableExpression<pets::columns::user_id>, NullableExpression<users::columns::id>>>>>`
    = note: required for `SelectStatement<FromClause<JoinOn<Join<table, SelectStatement<FromClause<JoinOn<..., ...>>>, ...>, ...>>>` to implement `SelectDsl<lower_utils::lower<posts::columns::title>>`
    = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:112:31
    |
112 |     let _ = join.select(lower(posts::title.nullable()));
    |                         ----- ^^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Nullable<Text>`
    |                         |
    |                         required by a bound introduced by this call
    |
    = note: expected struct `diesel::sql_types::Text`
               found struct `Nullable<diesel::sql_types::Text>`
    = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
note: required by a bound in `lower`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:32:1
    |
32  | define_sql_function!(fn lower(x: Text) -> Text);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `lower`
    = note: this error originates in the macro `define_sql_function` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Nullable<title> as Expression>::SqlType == Text`
   --> tests/fail/right_side_of_left_join_requires_nullable.rs:112:25
    |
112 |     let _ = join.select(lower(posts::title.nullable()));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Nullable<Text>`, found `Text`
    |
    = note: expected struct `Nullable<diesel::sql_types::Text>`
               found struct `diesel::sql_types::Text`
    = note: required for `NullableExpression<posts::columns::title>` to implement `AsExpression<diesel::sql_types::Text>`
