error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:27:10
   |
27 |         .group_by(posts::id)
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::id` to implement `AppearsOnTable<FromClause<users::table>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<users::table>>` to implement `GroupByDsl<posts::columns::id>`

error[E0271]: type mismatch resolving `<id as IsContainedInGroupBy<id>>::Output == Yes`
  --> tests/fail/invalid_group_by.rs:28:10
   |
28 |         .select(users::id)
   |          ^^^^^^ type mismatch resolving `<id as IsContainedInGroupBy<id>>::Output == Yes`
   |
note: expected this to be `diesel::expression::is_contained_in_group_by::No`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
note: required for `users::columns::id` to implement `ValidGrouping<posts::columns::id>`
  --> tests/fail/invalid_group_by.rs:8:9
   |
8  |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<FromClause<table>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:35:10
   |
35 |         .group_by(posts::id)
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::id` to implement `AppearsOnTable<FromClause<users::table>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<users::table>, diesel::query_builder::select_clause::SelectClause<users::columns::id>>` to implement `GroupByDsl<posts::columns::id>`

error[E0271]: type mismatch resolving `<FromClause<Alias<user1>> as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:43:10
   |
43 |         .group_by(posts::id)
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::id` to implement `AppearsOnTable<FromClause<Alias<user1>>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<Alias<user1>>>` to implement `GroupByDsl<posts::columns::id>`

error[E0277]: the trait bound `AliasedField<user1, users::columns::id>: ValidGrouping<posts::columns::id>` is not satisfied
  --> tests/fail/invalid_group_by.rs:44:17
   |
44 |         .select(user_alias.field(users::id))
   |          ------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidGrouping<posts::columns::id>` is not implemented for `AliasedField<user1, users::columns::id>`, which is required by `SelectStatement<FromClause<Alias<user1>>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<Alias<user1>>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<posts::columns::id>>: SelectDsl<_>`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `ValidGrouping<GroupByClause>`:
             <AliasedField<S, C2> as ValidGrouping<AliasedField<S, C1>>>
             <AliasedField<S, C> as ValidGrouping<()>>
   = note: required for `SelectStatement<FromClause<Alias<user1>>, DefaultSelectClause<FromClause<...>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<AliasedField<user1, users::columns::id>>`
note: required by a bound in `diesel::QueryDsl::select`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn select<Selection>(self, selection: Selection) -> Select<Self, Selection>
   |        ------ required by a bound in this associated function
...
   |         Self: methods::SelectDsl<Selection>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::select`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:49:10
   |
49 |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsOnTable<FromClause<users::table>>`
   = note: required for `SelectStatement<FromClause<users::table>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

error[E0277]: the trait bound `AliasedField<post1, posts::columns::id>: IsContainedInGroupBy<users::columns::id>` is not satisfied
  --> tests/fail/invalid_group_by.rs:50:10
   |
50 |         .select(users::id)
   |          ^^^^^^ the trait `IsContainedInGroupBy<users::columns::id>` is not implemented for `AliasedField<post1, posts::columns::id>`, which is required by `SelectStatement<FromClause<users::table>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<users::table>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<AliasedField<post1, posts::columns::id>>>: SelectDsl<_>`
   |
   = help: the following other types implement trait `IsContainedInGroupBy<T>`:
             <(T0, T1) as IsContainedInGroupBy<Col>>
             <(T0, T1, T2) as IsContainedInGroupBy<Col>>
             <(T0, T1, T2, T3) as IsContainedInGroupBy<Col>>
             <(T0, T1, T2, T3, T4) as IsContainedInGroupBy<Col>>
             <(T0, T1, T2, T3, T4, T5) as IsContainedInGroupBy<Col>>
             <(T0, T1, T2, T3, T4, T5, T6) as IsContainedInGroupBy<Col>>
             <(T0, T1, T2, T3, T4, T5, T6, T7) as IsContainedInGroupBy<Col>>
             <(T0, T1, T2, T3, T4, T5, T6, T7, T8) as IsContainedInGroupBy<Col>>
           and $N others
note: required for `users::columns::id` to implement `ValidGrouping<AliasedField<post1, posts::columns::id>>`
  --> tests/fail/invalid_group_by.rs:8:9
   |
8  |         id -> Integer,
   |         ^^
   = note: required for `SelectStatement<FromClause<table>, DefaultSelectClause<FromClause<table>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<users::columns::id>`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<FromClause<Alias<user1>> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:55:10
   |
55 |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsOnTable<FromClause<Alias<user1>>>`
   = note: required for `SelectStatement<FromClause<Alias<user1>>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

error[E0277]: the trait bound `AliasedField<user1, users::columns::id>: ValidGrouping<AliasedField<post1, posts::columns::id>>` is not satisfied
  --> tests/fail/invalid_group_by.rs:56:17
   |
56 |         .select(user_alias.field(users::id))
   |          ------ ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ValidGrouping<AliasedField<post1, posts::columns::id>>` is not implemented for `AliasedField<user1, users::columns::id>`, which is required by `SelectStatement<FromClause<Alias<user1>>, diesel::query_builder::select_clause::DefaultSelectClause<FromClause<Alias<user1>>>, diesel::query_builder::distinct_clause::NoDistinctClause, diesel::query_builder::where_clause::NoWhereClause, diesel::query_builder::order_clause::NoOrderClause, LimitOffsetClause<NoLimitClause, NoOffsetClause>, diesel::query_builder::group_by_clause::GroupByClause<AliasedField<post1, posts::columns::id>>>: SelectDsl<_>`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `ValidGrouping<GroupByClause>`:
             <AliasedField<S, C2> as ValidGrouping<AliasedField<S, C1>>>
             <AliasedField<S, C> as ValidGrouping<()>>
   = note: required for `SelectStatement<FromClause<Alias<user1>>, DefaultSelectClause<FromClause<...>>, ..., ..., ..., ..., ...>` to implement `SelectDsl<AliasedField<user1, users::columns::id>>`
note: required by a bound in `diesel::QueryDsl::select`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn select<Selection>(self, selection: Selection) -> Select<Self, Selection>
   |        ------ required by a bound in this associated function
...
   |         Self: methods::SelectDsl<Selection>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::select`
   = note: consider using `--verbose` to print the full type name to the console

error[E0271]: type mismatch resolving `<FromClause<Alias<user1>> as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:62:10
   |
62 |         .group_by(posts::id)
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
note: required for `posts::columns::id` to implement `AppearsOnTable<FromClause<Alias<user1>>>`
  --> tests/fail/invalid_group_by.rs:15:9
   |
15 |         id -> Integer,
   |         ^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: required for `SelectStatement<FromClause<Alias<user1>>, diesel::query_builder::select_clause::SelectClause<AliasedField<user1, users::columns::id>>>` to implement `GroupByDsl<posts::columns::id>`

error[E0271]: type mismatch resolving `<FromClause<table> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:68:10
   |
68 |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsOnTable<FromClause<users::table>>`
   = note: required for `SelectStatement<FromClause<users::table>, diesel::query_builder::select_clause::SelectClause<users::columns::id>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`

error[E0271]: type mismatch resolving `<FromClause<Alias<user1>> as AppearsInFromClause<Alias<post1>>>::Count == Once`
  --> tests/fail/invalid_group_by.rs:74:10
   |
74 |         .group_by(post_alias.field(posts::id))
   |          ^^^^^^^^ expected `Never`, found `Once`
   |
   = note: required for `AliasedField<post1, posts::columns::id>` to implement `AppearsOnTable<FromClause<Alias<user1>>>`
   = note: required for `SelectStatement<FromClause<Alias<user1>>, diesel::query_builder::select_clause::SelectClause<AliasedField<user1, users::columns::id>>>` to implement `GroupByDsl<AliasedField<post1, posts::columns::id>>`
