error[E0277]: Cannot select `posts::columns::id` from `users::table`
  --> tests/fail/distinct_on_allows_only_fields_of_table.rs:26:22
   |
26 |         .distinct_on(posts::id)
   |          ----------- ^^^^^^^^^ the trait `SelectableExpression<users::table>` is not implemented for `posts::columns::id`, which is required by `users::table: DistinctOnDsl<_>`
   |          |
   |          required by a bound introduced by this call
   |
   = note: `posts::columns::id` is no valid selection for `users::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <posts::columns::id as SelectableExpression<JoinOn<Join, On>>>
             <posts::columns::id as SelectableExpression<Only<posts::table>>>
             <posts::columns::id as SelectableExpression<SelectStatement<FromClause<From>>>>
             <posts::columns::id as SelectableExpression<Tablesample<posts::table, TSM>>>
             <posts::columns::id as SelectableExpression<posts::table>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <posts::columns::id as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
   = note: required for `users::table` to implement `DistinctOnDsl<posts::columns::id>`
note: required by a bound in `diesel::QueryDsl::distinct_on`
  --> $DIESEL/src/query_dsl/mod.rs
   |
   |     fn distinct_on<Expr>(self, expr: Expr) -> DistinctOn<Self, Expr>
   |        ----------- required by a bound in this associated function
   |     where
   |         Self: methods::DistinctOnDsl<Expr>,
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `QueryDsl::distinct_on`

error[E0277]: Cannot select `users::columns::name` from `posts::table`
  --> tests/fail/distinct_on_allows_only_fields_of_table.rs:30:10
   |
30 |         .distinct_on((posts::name, users::name))
   |          ^^^^^^^^^^^ the trait `SelectableExpression<posts::table>` is not implemented for `users::columns::name`, which is required by `posts::table: DistinctOnDsl<_>`
   |
   = note: `users::columns::name` is no valid selection for `posts::table`
   = help: the following other types implement trait `SelectableExpression<QS>`:
             <users::columns::name as SelectableExpression<JoinOn<Join, On>>>
             <users::columns::name as SelectableExpression<Only<users::table>>>
             <users::columns::name as SelectableExpression<SelectStatement<FromClause<From>>>>
             <users::columns::name as SelectableExpression<Tablesample<users::table, TSM>>>
             <users::columns::name as SelectableExpression<query_source::joins::Join<Left, Right, Inner>>>
             <users::columns::name as SelectableExpression<query_source::joins::Join<Left, Right, LeftOuter>>>
             <users::columns::name as SelectableExpression<users::table>>
   = note: required for `(posts::columns::name, users::columns::name)` to implement `SelectableExpression<posts::table>`
   = note: required for `posts::table` to implement `DistinctOnDsl<(posts::columns::name, users::columns::name)>`

error[E0271]: type mismatch resolving `<table as AppearsInFromClause<table>>::Count == Once`
  --> tests/fail/distinct_on_allows_only_fields_of_table.rs:30:10
   |
30 |         .distinct_on((posts::name, users::name))
   |          ^^^^^^^^^^^ expected `Never`, found `Once`
   |
note: required for `users::columns::name` to implement `AppearsOnTable<posts::table>`
  --> tests/fail/distinct_on_allows_only_fields_of_table.rs:8:9
   |
8  |         name -> VarChar,
   |         ^^^^
   = note: associated types for the current `impl` cannot be restricted in `where` clauses
   = note: 1 redundant requirement hidden
   = note: required for `(posts::columns::name, users::columns::name)` to implement `AppearsOnTable<posts::table>`
   = note: required for `(posts::columns::name, users::columns::name)` to implement `SelectableExpression<posts::table>`
   = note: required for `posts::table` to implement `DistinctOnDsl<(posts::columns::name, users::columns::name)>`
